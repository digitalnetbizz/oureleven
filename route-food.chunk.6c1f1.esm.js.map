{"version":3,"sources":["webpack:///./routes/food/index.tsx","webpack:///./input/inputlogic.tsx","webpack:///./components/ExpenseInput/index.tsx"],"names":["Food","useEffect","InputLogic","focusFirstInputElement","style","class","store","Stores","food","groceries","title","min_value","max_value","description","restaurant","food_delivery","bakery_coffee","bar_lounge","other","type","onClick","route","static","inputs","document","querySelectorAll","length","focus","ExpenseInput","props","showSuccessBlink","element","bg","backgroundColor","setTimeout","showErrorBlink","onChange","e","preventDefault","enabled","value","amt","nextFocusIndex","target","idx","i","getNextFocusIndex","select","focusNextElement","checked","onBlur","currentTarget","val","parseInt","disabled","id","frequency","for","payment"],"mappings":"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","file":"route-food.chunk.6c1f1.esm.js","sourcesContent":["import { h } from 'preact';\r\nimport { route } from 'preact-router';\r\nimport { Stores } from '../../stores/stores';\r\nimport { useEffect } from 'preact/hooks';\r\nimport { InputLogic } from '../../input/inputlogic';\r\nimport ExpenseInput from '../../components/ExpenseInput';\r\n\r\nconst Food = () => {\r\n\r\n\tuseEffect(() => {\r\n\t\tInputLogic.focusFirstInputElement()\r\n\t}, []);\r\n\r\n    return (\r\n\t\t<div style=\"padding:10px;\">\r\n\t\t\t<p style=\"height:50px;\"/>\r\n\r\n\t\t\t<div class=\"container\">\r\n\t\t\t\t<hr/>\r\n\t\t\t\t<h5>Food</h5>\r\n\t\t\t\tNot all the expenses here apply to your situation, only check on those item that is applicable. The expense amount can be estimates. Click next when you are done.<p/>\r\n\t\t\t\t<div class=\"row align-items-start\">\r\n\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t<ExpenseInput store={Stores.food.groceries} title=\"Groceries/Supermarket\" min_value=\"0\" max_value=\"10000\"\r\n\t\t\t\t\t\t\tdescription=\"Estimated grocery or supermarket expenses.\"/>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t<ExpenseInput store={Stores.food.restaurant} title=\"Restaurant\" min_value=\"0\" max_value=\"50000\"\r\n\t\t\t\t\t\t\tdescription=\"Estimated expenses of eating out in restaurants.\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"row align-items-start\">\r\n\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t<ExpenseInput store={Stores.food.food_delivery} title=\"Food deliveries\" min_value=\"0\" max_value=\"20000\"\r\n\t\t\t\t\t\t\tdescription=\"Estimated expenses of using food delivery service like Doordash, Uber eat etc.\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t<ExpenseInput store={Stores.food.bakery_coffee} title=\"Coffee or Bakeries\" min_value=\"0\" max_value=\"20000\"\r\n\t\t\t\t\t\t\tdescription=\"Estimated expenses related to coffee shop or bakeries.\"/>\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\t\r\n\t\t\t\t<div class=\"row align-items-start\">\r\n\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t<ExpenseInput store={Stores.food.bar_lounge} title=\"Bar / Lounge\" min_value=\"0\" max_value=\"5000\"\r\n\t\t\t\t\t\t\tdescription=\"Estimated expenses related to bar or lounges.\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t<ExpenseInput store={Stores.food.other} title=\"Other\" min_value=\"0\" max_value=\"20000\"\r\n\t\t\t\t\t\t\tdescription=\"Other food/beverage cost.\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\t\t\r\n                <hr/>\r\n\t\t\t\t<button type=\"button\" class=\"btn btn-lg btn-primary\" onClick={() =>route('/expense/retailer')}>Back: Retailers</button>&nbsp;\r\n\t\t\t\t<button type=\"button\" class=\"btn btn-lg btn-primary\" onClick={() =>route('/expense/transport')}>Next: Transportation</button>\r\n\t\t\t\t<hr/>                \t\t\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t);\r\n};\r\n\r\nexport default Food;\r\n","export class InputLogic {\r\n    static focusFirstInputElement() {\r\n        let inputs = document.querySelectorAll('input')\r\n\t\tif(inputs.length > 0) {\r\n\t\t\tinputs[0].focus()\r\n\t\t}\r\n    }\r\n\r\n    static focusFirstSelectElement() {\r\n        let inputs = document.querySelectorAll('select')\r\n\t\tif(inputs.length > 0) {\r\n\t\t\tinputs[0].focus()\r\n\t\t}\r\n    }\r\n}\r\n","import { h } from 'preact';\r\n\r\nconst ExpenseInput = (props: any) => {\r\n\r\n\tconst toggle = (e: Event) => {\r\n        e.preventDefault()\r\n\t\tprops.store.enabled.value = !props.store.enabled.value\r\n\r\n        if(props.store.enabled.value === false) {\r\n            props.store.amt.value = 0\r\n        } else {\r\n            focusNextElement(e)\r\n        }\r\n\t};\r\n\r\n    function focusNextElement(e: Event) { \r\n        let inputs = document.querySelectorAll('input')\r\n        let nextFocusIndex = getNextFocusIndex(inputs, e.target as HTMLElement)\r\n        setTimeout(() => {\r\n            let element = inputs[nextFocusIndex]\r\n            element.focus()\r\n            element.select()\r\n        }, 0)\r\n        \r\n    }\r\n\r\n    function getNextFocusIndex(inputs: NodeListOf<HTMLInputElement>, target: HTMLElement) {\r\n        let idx = 0\r\n\r\n        for(let i=0; i<inputs.length; ++i) {\r\n            if(inputs[i] == target) {\r\n                // found \r\n                if(i !== inputs.length - 1) {\r\n                    idx = i+1\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        return idx\r\n    }\r\n\r\n    const updateValue = (e: Event) => {\r\n\t\tconst element = e.currentTarget as HTMLInputElement\r\n        if(element.value === '') {\r\n            element.value = \"0\"\r\n            props.store.enabled.value = false\r\n            showErrorBlink(element)\r\n        } else {\r\n            let val = parseInt(element.value)\r\n            if(val > props.min_value) {\r\n                if(val > props.max_value) {\r\n                    showErrorBlink(element)\r\n                    element.value = props.max_value\r\n                } else {\r\n                    showSuccessBlink(element)\r\n                    props.store.amt.value = val\r\n                }\r\n            } else {\r\n                showErrorBlink(element)\r\n                props.store.amt.value = 0\r\n                props.store.enabled.value = false    \r\n            }\r\n        }\r\n\t};\r\n\r\n    const showSuccessBlink = (element: HTMLInputElement) => {\r\n        let bg = element.style.backgroundColor\r\n        element.style.backgroundColor = 'lightgreen'\r\n        setTimeout(()=>{\r\n            element.style.backgroundColor = bg\r\n        }, 500)\r\n    }\r\n\r\n    const showErrorBlink = (element: HTMLInputElement) => {\r\n        let bg = element.style.backgroundColor\r\n        element.style.backgroundColor = 'pink'\r\n        setTimeout(()=>{\r\n            element.style.backgroundColor = bg\r\n        }, 500)\r\n    }\r\n\r\n    const handleFrequency = (e: Event) => {\r\n\t\tconst element = e.currentTarget as HTMLSelectElement\r\n\t\tprops.store.frequency.value = parseInt(element.value)\r\n\t};\r\n\r\n    const handlePayment = (e: Event) => {\r\n\t\tconst element = e.currentTarget as HTMLSelectElement\r\n\t\tprops.store.payment.value = parseInt(element.value)\r\n\t};\r\n\r\n    return (\r\n        <div class=\"mb-3 border rounded\" style=\"width:450px;padding:5px;\">\r\n            <div class=\"input-group mb-3\">\r\n                <span class=\"input-group-text\" style=\"width:180px;font-size:10pt;\">{props.title}</span>\r\n                <div class=\"input-group-text\">\r\n                    <input onChange={toggle} class=\"form-check-input mt-0\" type=\"checkbox\" aria-label=\"Checkbox for following text input\" checked={props.store.enabled.value}/>\r\n                </div>\r\n                <span class=\"input-group-text\">$</span>\r\n                <input onBlur={updateValue} type=\"number\" value={props.store.amt.value} aria-label=\"Amount\" class=\"form-control text-end\" disabled={props.store.enabled.value === false}></input>\r\n                <span class=\"input-group-text\">.00</span>\r\n                <div class=\"input-group\">\r\n                    <div class=\"form-floating\">\r\n                        <select class=\"form-select\" id=\"floatingSelect\" aria-label=\"Filing status\" style=\"font-size:10pt;width:200px;\"\r\n                            value={props.store.frequency.value} onChange={handleFrequency}>\r\n                            <option value=\"0\">Monthly</option>\r\n                            <option value=\"1\">Quarterly</option>\r\n                            <option value=\"2\">Semi-Annually</option>\r\n                            <option value=\"3\">Annually</option>\r\n                        </select>\r\n                        <label for=\"floatingSelect\" style=\"font-size:9pt;\">Frequency</label>\r\n                    </div>\r\n                    <div class=\"form-floating\">\r\n                        <select class=\"form-select\" id=\"floatingSelect\" aria-label=\"Filing status\" style=\"font-size:10pt;width:239px;\"\r\n                            value={props.store.payment.value} onChange={handlePayment}>\r\n                            <option value=\"0\">0% pay with cash/check</option>\r\n                            <option value=\"1\">1% back with credit card</option>\r\n                            <option value=\"2\">2% back with credit card</option>\r\n                            <option value=\"3\">3% back with credit card</option>\r\n                            <option value=\"4\">4% back with credit card</option>\r\n                            <option value=\"5\">5% back with credit card</option>\r\n                            <option value=\"6\">6% back with credit card</option>\r\n                            <option value=\"7\">10% back with credit card</option>\r\n                        </select>\r\n                        <label for=\"floatingSelect\" style=\"font-size:9pt;\">Payment method</label>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <label style=\"font-size:11px;padding-left:4px;\">{props.description}</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseInput;"],"sourceRoot":""}