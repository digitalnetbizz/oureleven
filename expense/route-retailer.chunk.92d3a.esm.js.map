{"version":3,"sources":["webpack:///./input/inputlogic.tsx","webpack:///./components/ExpenseInput/index.tsx","webpack:///./routes/retailer/index.tsx"],"names":["InputLogic","static","inputs","document","querySelectorAll","length","focus","ExpenseInput","props","showSuccessBlink","element","bg","style","backgroundColor","setTimeout","showErrorBlink","class","title","onChange","e","preventDefault","store","enabled","value","amt","nextFocusIndex","target","idx","i","getNextFocusIndex","select","focusNextElement","type","checked","onBlur","currentTarget","val","parseInt","min_value","max_value","disabled","id","frequency","for","payment","description","Retailer","useEffect","focusFirstInputElement","Stores","retailer","amazon","costco","walmart","sams_club","homedepot_lowes","pharmacies","other","onClick","route"],"mappings":"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","file":"route-retailer.chunk.92d3a.esm.js","sourcesContent":["export class InputLogic {\r\n    static focusFirstInputElement() {\r\n        let inputs = document.querySelectorAll('input')\r\n\t\tif(inputs.length > 0) {\r\n\t\t\tinputs[0].focus()\r\n\t\t}\r\n    }\r\n\r\n    static focusFirstSelectElement() {\r\n        let inputs = document.querySelectorAll('select')\r\n\t\tif(inputs.length > 0) {\r\n\t\t\tinputs[0].focus()\r\n\t\t}\r\n    }\r\n}\r\n","import { h } from 'preact';\r\n\r\nconst ExpenseInput = (props: any) => {\r\n\r\n\tconst toggle = (e: Event) => {\r\n        e.preventDefault()\r\n\t\tprops.store.enabled.value = !props.store.enabled.value\r\n\r\n        if(props.store.enabled.value === false) {\r\n            props.store.amt.value = 0\r\n        } else {\r\n            focusNextElement(e)\r\n        }\r\n\t};\r\n\r\n    function focusNextElement(e: Event) { \r\n        let inputs = document.querySelectorAll('input')\r\n        let nextFocusIndex = getNextFocusIndex(inputs, e.target as HTMLElement)\r\n        setTimeout(() => {\r\n            let element = inputs[nextFocusIndex]\r\n            element.focus()\r\n            element.select()\r\n        }, 0)\r\n        \r\n    }\r\n\r\n    function getNextFocusIndex(inputs: NodeListOf<HTMLInputElement>, target: HTMLElement) {\r\n        let idx = 0\r\n\r\n        for(let i=0; i<inputs.length; ++i) {\r\n            if(inputs[i] == target) {\r\n                // found \r\n                if(i !== inputs.length - 1) {\r\n                    idx = i+1\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        return idx\r\n    }\r\n\r\n    const updateValue = (e: Event) => {\r\n\t\tconst element = e.currentTarget as HTMLInputElement\r\n        if(element.value === '') {\r\n            element.value = \"0\"\r\n            props.store.enabled.value = false\r\n            showErrorBlink(element)\r\n        } else {\r\n            let val = parseInt(element.value)\r\n            if(val > props.min_value) {\r\n                if(val > props.max_value) {\r\n                    showErrorBlink(element)\r\n                    element.value = props.max_value\r\n                } else {\r\n                    showSuccessBlink(element)\r\n                    props.store.amt.value = val\r\n                }\r\n            } else {\r\n                showErrorBlink(element)\r\n                props.store.amt.value = 0\r\n                props.store.enabled.value = false    \r\n            }\r\n        }\r\n\t};\r\n\r\n    const showSuccessBlink = (element: HTMLInputElement) => {\r\n        let bg = element.style.backgroundColor\r\n        element.style.backgroundColor = 'lightgreen'\r\n        setTimeout(()=>{\r\n            element.style.backgroundColor = bg\r\n        }, 500)\r\n    }\r\n\r\n    const showErrorBlink = (element: HTMLInputElement) => {\r\n        let bg = element.style.backgroundColor\r\n        element.style.backgroundColor = 'pink'\r\n        setTimeout(()=>{\r\n            element.style.backgroundColor = bg\r\n        }, 500)\r\n    }\r\n\r\n    const handleFrequency = (e: Event) => {\r\n\t\tconst element = e.currentTarget as HTMLSelectElement\r\n\t\tprops.store.frequency.value = parseInt(element.value)\r\n\t};\r\n\r\n    const handlePayment = (e: Event) => {\r\n\t\tconst element = e.currentTarget as HTMLSelectElement\r\n\t\tprops.store.payment.value = parseInt(element.value)\r\n\t};\r\n\r\n    return (\r\n        <div class=\"mb-3 border rounded\" style=\"width:450px;padding:5px;\">\r\n            <div class=\"input-group mb-3\">\r\n                <span class=\"input-group-text\" style=\"width:180px;font-size:10pt;\">{props.title}</span>\r\n                <div class=\"input-group-text\">\r\n                    <input onChange={toggle} class=\"form-check-input mt-0\" type=\"checkbox\" aria-label=\"Checkbox for following text input\" checked={props.store.enabled.value}/>\r\n                </div>\r\n                <span class=\"input-group-text\">$</span>\r\n                <input onBlur={updateValue} type=\"number\" value={props.store.amt.value} aria-label=\"Amount\" class=\"form-control text-end\" disabled={props.store.enabled.value === false}></input>\r\n                <span class=\"input-group-text\">.00</span>\r\n                <div class=\"input-group\">\r\n                    <div class=\"form-floating\">\r\n                        <select class=\"form-select\" id=\"floatingSelect\" aria-label=\"Filing status\" style=\"font-size:10pt;width:200px;\"\r\n                            value={props.store.frequency.value} onChange={handleFrequency}>\r\n                            <option value=\"0\">Monthly</option>\r\n                            <option value=\"1\">Quarterly</option>\r\n                            <option value=\"2\">Semi-Annually</option>\r\n                            <option value=\"3\">Annually</option>\r\n                        </select>\r\n                        <label for=\"floatingSelect\" style=\"font-size:9pt;\">Frequency</label>\r\n                    </div>\r\n                    <div class=\"form-floating\">\r\n                        <select class=\"form-select\" id=\"floatingSelect\" aria-label=\"Filing status\" style=\"font-size:10pt;width:239px;\"\r\n                            value={props.store.payment.value} onChange={handlePayment}>\r\n                            <option value=\"0\">0% pay with cash/check</option>\r\n                            <option value=\"1\">1% back with credit card</option>\r\n                            <option value=\"2\">2% back with credit card</option>\r\n                            <option value=\"3\">3% back with credit card</option>\r\n                            <option value=\"4\">4% back with credit card</option>\r\n                            <option value=\"5\">5% back with credit card</option>\r\n                            <option value=\"6\">6% back with credit card</option>\r\n                            <option value=\"7\">10% back with credit card</option>\r\n                        </select>\r\n                        <label for=\"floatingSelect\" style=\"font-size:9pt;\">Payment method</label>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <label style=\"font-size:11px;padding-left:4px;\">{props.description}</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseInput;","import { h } from 'preact';\r\nimport { route } from 'preact-router';\r\nimport { Stores } from '../../stores/stores';\r\nimport { useEffect } from 'preact/hooks';\r\nimport { InputLogic } from '../../input/inputlogic';\r\nimport ExpenseInput from '../../components/ExpenseInput';\r\n\r\nconst Retailer = () => {\r\n\r\n\tuseEffect(() => {\r\n\t\tInputLogic.focusFirstInputElement()\r\n\t}, []);\r\n\r\n    return (\r\n\t\t<div style=\"padding:10px;\">\r\n\t\t\t<p style=\"height:50px;\"/>\r\n\r\n\t\t\t<div class=\"container\">\r\n\t\t\t\t<hr/>\r\n\t\t\t\t<h5>Expense by Retailers</h5>\r\n\t\t\t\tSome people prefer not to split everything into detailed categories. Instead most people are buying from big retailers in the country like Amazon, Costco, Walmart, Sam's club, Target etc. If this the way you want to group by, you can enter by retailer. If you prefer to itemize everything by fine category, you can skip to the next section.<p/>\r\n                You should not double expense on item enter here. For eg. if you are buying some groceries from Costco, you should enter just the groceries expense that not from Costco in the other section. Or if you are buying all gifts from Amazon, then don't enter anything in other gifts section.\r\n\t\t\t\t<div class=\"row align-items-start\">\r\n\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t<ExpenseInput store={Stores.retailer.amazon} title=\"Amazon / Wholefoods\" min_value=\"0\" max_value=\"100000\"\r\n\t\t\t\t\t\t\tdescription=\"All Amazon purchases.\"/>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t<ExpenseInput store={Stores.retailer.costco} title=\"Costco\" min_value=\"0\" max_value=\"50000\"\r\n\t\t\t\t\t\t\tdescription=\"All Costco purchases.\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"row align-items-start\">\r\n\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t<ExpenseInput store={Stores.retailer.walmart} title=\"Walmart\" min_value=\"0\" max_value=\"20000\"\r\n\t\t\t\t\t\t\tdescription=\"All Walmart purchases.\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t<ExpenseInput store={Stores.retailer.sams_club} title=\"Sam's Club\" min_value=\"0\" max_value=\"20000\"\r\n\t\t\t\t\t\t\tdescription=\"All Sam's club purchases.\"/>\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\t\r\n\t\t\t\t<div class=\"row align-items-start\">\r\n\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t<ExpenseInput store={Stores.retailer.target} title=\"Target\" min_value=\"0\" max_value=\"5000\"\r\n\t\t\t\t\t\t\tdescription=\"All Target purchases.\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t<ExpenseInput store={Stores.retailer.homedepot_lowes} title=\"Home Improvements\" min_value=\"0\" max_value=\"20000\"\r\n\t\t\t\t\t\t\tdescription=\"Home Depot, Lowe's or other home improvements store.\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\t\t\r\n\t\t\t\t<div class=\"row align-items-start\">\r\n\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t<ExpenseInput store={Stores.retailer.pharmacies} title=\"Pharmacies\" min_value=\"0\" max_value=\"5000\"\r\n\t\t\t\t\t\t\tdescription=\"All pharmacies purchases such as CVS, Walgreen, RiteAid etc.\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t<ExpenseInput store={Stores.retailer.other} title=\"Other Retailers\" min_value=\"0\" max_value=\"20000\"\r\n\t\t\t\t\t\t\tdescription=\"Other retailers not listed above.\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n                <hr/>\r\n\t\t\t\t<button type=\"button\" class=\"btn btn-lg btn-primary\" onClick={() =>route('/health')}>Back: Health/Child</button>&nbsp;\r\n\t\t\t\t<button type=\"button\" class=\"btn btn-lg btn-primary\" onClick={() =>route('/food')}>Next: Food / Child</button>\r\n\t\t\t\t<hr/>                \t                \t\t\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t);\r\n};\r\n\r\nexport default Retailer;\r\n"],"sourceRoot":""}