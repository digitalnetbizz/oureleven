{"version":3,"sources":["webpack:///../src/util.js","webpack:///../src/PureComponent.js","webpack:///../src/suspense.js","webpack:///../src/suspense-list.js","webpack:///../src/render.js","webpack:///../src/hooks/useLoadGoogleCharts.ts","webpack:///../src/hooks/useLoadScript.ts","webpack:///../src/forwardRef.js","webpack:///../src/default-props.ts","webpack:///../src/generate-unique-id.ts","webpack:///../src/constants.ts","webpack:///../src/load-data-table-from-spreadsheet.ts","webpack:///../src/Context.tsx","webpack:///../src/components/GoogleChartDataTable.tsx","webpack:///../src/components/GoogleChartEvents.tsx","webpack:///../src/components/GoogleChart.tsx","webpack:///../src/ReactGoogleCharts.tsx","webpack:///../src/types.ts","webpack:///../src/index.tsx","webpack:///./components/Total/index.tsx","webpack:///./routes/analysis/index.tsx"],"names":["assign","obj","props","i","shallowDiffers","a","b","PureComponent","p","this","detachedClone","vnode","detachedParent","parentDom","__c","forEach","effect","__H","__k","map","child","removeOriginal","originalParent","__v","__e","insertBefore","__d","Suspense","_suspenders","suspended","component","__","__a","SuspenseList","_next","_map","empty","isPropagationStopped","cancelBubble","isDefaultPrevented","defaultPrevented","useLoadGoogleCharts","param","src","onLoad","onError","chartVersion","chartPackages","chartLanguage","mapsApiKey","useState","googleCharts","setGoogleCharts","failed","setFailed","google","window","charts","load","packages","language","setOnLoadCallback","useEffect","document","foundScript","querySelector","concat","dataset","loaded","script","createElement","onLoadWithMarker","addEventListener","head","append","removeEventListener","LoadGoogleCharts","prototype","Component","isPureReactComponent","shouldComponentUpdate","state","oldDiffHook","options","__b","type","__f","ref","Symbol","for","REACT_FORWARD_SYMBOL","oldCatchError","error","newVNode","oldVNode","errorInfo","then","oldUnmount","unmount","__R","promise","suspendingVNode","suspendingComponent","c","push","resolve","resolved","onResolved","onSuspensionComplete","__u","suspendedVNode","setState","pop","forceUpdate","wasHydrating","componentWillUnmount","render","detachedComponent","__P","fallback","Fragment","children","list","node","delete","revealOrder","size","length","delegated","get","unsuspend","wrappedUnsuspend","Map","toChildArray","reverse","set","componentDidUpdate","componentDidMount","_this","REACT_ELEMENT_TYPE","CAMEL_PROPS","IS_DOM","onChangeInputType","test","isReactComponent","Object","defineProperty","key","configurable","v","writable","value","oldEventHook","event","e","persist","nativeEvent","classNameDescriptor","class","oldVNodeHook","normalizedProps","nonCustomElement","indexOf","toLowerCase","replace","multiple","Array","isArray","selected","defaultValue","className","enumerable","$$typeof","oldBeforeRender","__r","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","chartDefaultProps","legend_toggle","legendToggle","getChartWrapper","spreadSheetQueryParameters","headers","gid","rootProps","chartWrapperParams","uniqueID","generateUniqueID","DEFAULT_CHART_COLORS","loadDataTableFromSpreadSheet","googleViz","spreadSheetUrl","urlParams","Promise","reject","queryString","query","encodeURIComponent","sheet","access_token","urlQueryString","urlToSpreadSheet","visualization","Query","send","response","isError","getMessage","getDetailedMessage","getDataTable","React","Provider","Consumer","ContextProvider","ContextConsumer","context","GRAY_COLOR","GoogleChartDataTableInner","hiddenColumns","listenToLegendToggle","googleChartWrapper","events","addListener","selection","getChart","getSelection","dataTable","row","columnID","getColumnID","column","includes","filter","colID","applyFormatters","formatters","formatter","ArrowFormat","format","BarFormat","vizFormatter","ColorFormat","ranges","addRange","DateFormat","NumberFormat","PatternFormat","columnIndex","getColumnId","getColumnLabel","draw","data","diffdata","rows","columns","chartType","chartDiff","oldData","arrayToDataTable","old","newData","new","computeDiff","columnCount","DataTable","getNumberOfColumns","previousColumnLabel","previousColumnID","previousColumnType","getColumnType","removeColumn","addColumn","label","id","chart","getChartType","clearChart","setChartType","setOptions","setDataTable","googleChartDashboard","grayOutHiddenColumns","colors","from","dontcare","onResize","removeAllListeners","GoogleChartDataTable","GoogleChartEvents","listenToEvents","chartEvents","callback","eventName","args","chartWrapper","eventArgs","propsFromContext","controlCounter","GoogleChart","googleChartControls","googleChartEditor","isReady","graphID","dashboard_ref","toolbar_ref","getGraphID","instanceGraphID","graph_id","getControlID","index","addControls","controls","control","controlType","controlOptions","controlWrapperParams","controlID","controlProp","ControlWrapper","containerId","bind","chartControl","controlEvents","removeListener","controlWrapper","renderChart","divStyle","height","width","style","div","renderControl","getContainerId","renderToolBar","toolbarItems","getChartEditor","chartConfig","ChartWrapper","Dashboard","drawToolbar","current","chartEditor","ChartEditor","setControlType","nextProps","nextState","renderToolbar","controlPosition","Chart","_isMounted","loadingStatus","isFullyLoaded","onSuccess","setInterval","clearInterval","loader","errorElement","defaultProps","GoogleDataTableColumnRoleType","annotation","annotationText","certainty","emphasis","interval","scope","tooltip","domain","Total","title","disabled","description","Analysis","setShowAlertData","monthlyExpensesData","setMonthlyExpensesData","yearlyTotalData","setYearlyTotalData","yearlyCashbackData","setYearlyCashbackData","expenseChartData","setExpenseChartData","top10ChartData","setTop10ChartData","flowData","setFlowData","monthlyExpenses","Stores","GetTotalSpendingAsMonthlyExpense","category","getExpenseChartData","getTop10ExpenseChartData","items","parseInt","expense","total","cashback","info","card_bonus","amt","getExpenseFlowChartData","categories","result","SerializationHelpers","CategoryTitleTransform","j","item","net_pay","total_expense","mortgage_principal","frequency","sort","top10_sum","onClick","Serialize","ResetModel","route","toFixed","pieHole","is3D","titleTextStyle","fontName","fontSize"],"mappings":"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","file":"route-analysis.chunk.906b1.js","sourcesContent":["/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Check if two objects have a different shape\n * @param {object} a\n * @param {object} b\n * @returns {boolean}\n */\nexport function shallowDiffers(a, b) {\n\tfor (let i in a) if (i !== '__source' && !(i in b)) return true;\n\tfor (let i in b) if (i !== '__source' && a[i] !== b[i]) return true;\n\treturn false;\n}\n\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n/**\n * Check if two values are the same value\n * @param {*} x\n * @param {*} y\n * @returns {boolean}\n */\nexport function is(x, y) {\n\treturn (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\n","import { Component } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Component class with a predefined `shouldComponentUpdate` implementation\n */\nexport function PureComponent(p) {\n\tthis.props = p;\n}\nPureComponent.prototype = new Component();\n// Some third-party libraries check if this property is present\nPureComponent.prototype.isPureReactComponent = true;\nPureComponent.prototype.shouldComponentUpdate = function(props, state) {\n\treturn shallowDiffers(this.props, props) || shallowDiffers(this.state, state);\n};\n","import { Component, createElement, options, Fragment } from 'preact';\nimport { assign } from './util';\n\nconst oldCatchError = options._catchError;\noptions._catchError = function(error, newVNode, oldVNode, errorInfo) {\n\tif (error.then) {\n\t\t/** @type {import('./internal').Component} */\n\t\tlet component;\n\t\tlet vnode = newVNode;\n\n\t\tfor (; (vnode = vnode._parent); ) {\n\t\t\tif ((component = vnode._component) && component._childDidSuspend) {\n\t\t\t\tif (newVNode._dom == null) {\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t}\n\t\t\t\t// Don't call oldCatchError if we found a Suspense\n\t\t\t\treturn component._childDidSuspend(error, newVNode);\n\t\t\t}\n\t\t}\n\t}\n\toldCatchError(error, newVNode, oldVNode, errorInfo);\n};\n\nconst oldUnmount = options.unmount;\noptions.unmount = function(vnode) {\n\t/** @type {import('./internal').Component} */\n\tconst component = vnode._component;\n\tif (component && component._onResolve) {\n\t\tcomponent._onResolve();\n\t}\n\n\t// if the component is still hydrating\n\t// most likely it is because the component is suspended\n\t// we set the vnode.type as `null` so that it is not a typeof function\n\t// so the unmount will remove the vnode._dom\n\tif (component && vnode._hydrating === true) {\n\t\tvnode.type = null;\n\t}\n\n\tif (oldUnmount) oldUnmount(vnode);\n};\n\nfunction detachedClone(vnode, detachedParent, parentDom) {\n\tif (vnode) {\n\t\tif (vnode._component && vnode._component.__hooks) {\n\t\t\tvnode._component.__hooks._list.forEach(effect => {\n\t\t\t\tif (typeof effect._cleanup == 'function') effect._cleanup();\n\t\t\t});\n\n\t\t\tvnode._component.__hooks = null;\n\t\t}\n\n\t\tvnode = assign({}, vnode);\n\t\tif (vnode._component != null) {\n\t\t\tif (vnode._component._parentDom === parentDom) {\n\t\t\t\tvnode._component._parentDom = detachedParent;\n\t\t\t}\n\t\t\tvnode._component = null;\n\t\t}\n\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tdetachedClone(child, detachedParent, parentDom)\n\t\t\t);\n\t}\n\n\treturn vnode;\n}\n\nfunction removeOriginal(vnode, detachedParent, originalParent) {\n\tif (vnode) {\n\t\tvnode._original = null;\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tremoveOriginal(child, detachedParent, originalParent)\n\t\t\t);\n\n\t\tif (vnode._component) {\n\t\t\tif (vnode._component._parentDom === detachedParent) {\n\t\t\t\tif (vnode._dom) {\n\t\t\t\t\toriginalParent.insertBefore(vnode._dom, vnode._nextDom);\n\t\t\t\t}\n\t\t\t\tvnode._component._force = true;\n\t\t\t\tvnode._component._parentDom = originalParent;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn vnode;\n}\n\n// having custom inheritance instead of a class here saves a lot of bytes\nexport function Suspense() {\n\t// we do not call super here to golf some bytes...\n\tthis._pendingSuspensionCount = 0;\n\tthis._suspenders = null;\n\tthis._detachOnNextRender = null;\n}\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspense.prototype = new Component();\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {Promise} promise The thrown promise\n * @param {import('./internal').VNode<any, any>} suspendingVNode The suspending component\n */\nSuspense.prototype._childDidSuspend = function(promise, suspendingVNode) {\n\tconst suspendingComponent = suspendingVNode._component;\n\n\t/** @type {import('./internal').SuspenseComponent} */\n\tconst c = this;\n\n\tif (c._suspenders == null) {\n\t\tc._suspenders = [];\n\t}\n\tc._suspenders.push(suspendingComponent);\n\n\tconst resolve = suspended(c._vnode);\n\n\tlet resolved = false;\n\tconst onResolved = () => {\n\t\tif (resolved) return;\n\n\t\tresolved = true;\n\t\tsuspendingComponent._onResolve = null;\n\n\t\tif (resolve) {\n\t\t\tresolve(onSuspensionComplete);\n\t\t} else {\n\t\t\tonSuspensionComplete();\n\t\t}\n\t};\n\n\tsuspendingComponent._onResolve = onResolved;\n\n\tconst onSuspensionComplete = () => {\n\t\tif (!--c._pendingSuspensionCount) {\n\t\t\t// If the suspension was during hydration we don't need to restore the\n\t\t\t// suspended children into the _children array\n\t\t\tif (c.state._suspended) {\n\t\t\t\tconst suspendedVNode = c.state._suspended;\n\t\t\t\tc._vnode._children[0] = removeOriginal(\n\t\t\t\t\tsuspendedVNode,\n\t\t\t\t\tsuspendedVNode._component._parentDom,\n\t\t\t\t\tsuspendedVNode._component._originalParentDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tc.setState({ _suspended: (c._detachOnNextRender = null) });\n\n\t\t\tlet suspended;\n\t\t\twhile ((suspended = c._suspenders.pop())) {\n\t\t\t\tsuspended.forceUpdate();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * We do not set `suspended: true` during hydration because we want the actual markup\n\t * to remain on screen and hydrate it when the suspense actually gets resolved.\n\t * While in non-hydration cases the usual fallback -> component flow would occour.\n\t */\n\tconst wasHydrating = suspendingVNode._hydrating === true;\n\tif (!c._pendingSuspensionCount++ && !wasHydrating) {\n\t\tc.setState({ _suspended: (c._detachOnNextRender = c._vnode._children[0]) });\n\t}\n\tpromise.then(onResolved, onResolved);\n};\n\nSuspense.prototype.componentWillUnmount = function() {\n\tthis._suspenders = [];\n};\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {import('./internal').SuspenseComponent[\"props\"]} props\n * @param {import('./internal').SuspenseState} state\n */\nSuspense.prototype.render = function(props, state) {\n\tif (this._detachOnNextRender) {\n\t\t// When the Suspense's _vnode was created by a call to createVNode\n\t\t// (i.e. due to a setState further up in the tree)\n\t\t// it's _children prop is null, in this case we \"forget\" about the parked vnodes to detach\n\t\tif (this._vnode._children) {\n\t\t\tconst detachedParent = document.createElement('div');\n\t\t\tconst detachedComponent = this._vnode._children[0]._component;\n\t\t\tthis._vnode._children[0] = detachedClone(\n\t\t\t\tthis._detachOnNextRender,\n\t\t\t\tdetachedParent,\n\t\t\t\t(detachedComponent._originalParentDom = detachedComponent._parentDom)\n\t\t\t);\n\t\t}\n\n\t\tthis._detachOnNextRender = null;\n\t}\n\n\t// Wrap fallback tree in a VNode that prevents itself from being marked as aborting mid-hydration:\n\t/** @type {import('./internal').VNode} */\n\tconst fallback =\n\t\tstate._suspended && createElement(Fragment, null, props.fallback);\n\tif (fallback) fallback._hydrating = null;\n\n\treturn [\n\t\tcreateElement(Fragment, null, state._suspended ? null : props.children),\n\t\tfallback\n\t];\n};\n\n/**\n * Checks and calls the parent component's _suspended method, passing in the\n * suspended vnode. This is a way for a parent (e.g. SuspenseList) to get notified\n * that one of its children/descendants suspended.\n *\n * The parent MAY return a callback. The callback will get called when the\n * suspension resolves, notifying the parent of the fact.\n * Moreover, the callback gets function `unsuspend` as a parameter. The resolved\n * child descendant will not actually get unsuspended until `unsuspend` gets called.\n * This is a way for the parent to delay unsuspending.\n *\n * If the parent does not return a callback then the resolved vnode\n * gets unsuspended immediately when it resolves.\n *\n * @param {import('./internal').VNode} vnode\n * @returns {((unsuspend: () => void) => void)?}\n */\nexport function suspended(vnode) {\n\t/** @type {import('./internal').Component} */\n\tlet component = vnode._parent._component;\n\treturn component && component._suspended && component._suspended(vnode);\n}\n\nexport function lazy(loader) {\n\tlet prom;\n\tlet component;\n\tlet error;\n\n\tfunction Lazy(props) {\n\t\tif (!prom) {\n\t\t\tprom = loader();\n\t\t\tprom.then(\n\t\t\t\texports => {\n\t\t\t\t\tcomponent = exports.default || exports;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\terror = e;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (!component) {\n\t\t\tthrow prom;\n\t\t}\n\n\t\treturn createElement(component, props);\n\t}\n\n\tLazy.displayName = 'Lazy';\n\tLazy._forwarded = true;\n\treturn Lazy;\n}\n","import { Component, toChildArray } from 'preact';\nimport { suspended } from './suspense.js';\n\n// Indexes to linked list nodes (nodes are stored as arrays to save bytes).\nconst SUSPENDED_COUNT = 0;\nconst RESOLVED_COUNT = 1;\nconst NEXT_NODE = 2;\n\n// Having custom inheritance instead of a class here saves a lot of bytes.\nexport function SuspenseList() {\n\tthis._next = null;\n\tthis._map = null;\n}\n\n// Mark one of child's earlier suspensions as resolved.\n// Some pending callbacks may become callable due to this\n// (e.g. the last suspended descendant gets resolved when\n// revealOrder === 'together'). Process those callbacks as well.\nconst resolve = (list, child, node) => {\n\tif (++node[RESOLVED_COUNT] === node[SUSPENDED_COUNT]) {\n\t\t// The number a child (or any of its descendants) has been suspended\n\t\t// matches the number of times it's been resolved. Therefore we\n\t\t// mark the child as completely resolved by deleting it from ._map.\n\t\t// This is used to figure out when *all* children have been completely\n\t\t// resolved when revealOrder is 'together'.\n\t\tlist._map.delete(child);\n\t}\n\n\t// If revealOrder is falsy then we can do an early exit, as the\n\t// callbacks won't get queued in the node anyway.\n\t// If revealOrder is 'together' then also do an early exit\n\t// if all suspended descendants have not yet been resolved.\n\tif (\n\t\t!list.props.revealOrder ||\n\t\t(list.props.revealOrder[0] === 't' && list._map.size)\n\t) {\n\t\treturn;\n\t}\n\n\t// Walk the currently suspended children in order, calling their\n\t// stored callbacks on the way. Stop if we encounter a child that\n\t// has not been completely resolved yet.\n\tnode = list._next;\n\twhile (node) {\n\t\twhile (node.length > 3) {\n\t\t\tnode.pop()();\n\t\t}\n\t\tif (node[RESOLVED_COUNT] < node[SUSPENDED_COUNT]) {\n\t\t\tbreak;\n\t\t}\n\t\tlist._next = node = node[NEXT_NODE];\n\t}\n};\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspenseList.prototype = new Component();\n\nSuspenseList.prototype._suspended = function(child) {\n\tconst list = this;\n\tconst delegated = suspended(list._vnode);\n\n\tlet node = list._map.get(child);\n\tnode[SUSPENDED_COUNT]++;\n\n\treturn unsuspend => {\n\t\tconst wrappedUnsuspend = () => {\n\t\t\tif (!list.props.revealOrder) {\n\t\t\t\t// Special case the undefined (falsy) revealOrder, as there\n\t\t\t\t// is no need to coordinate a specific order or unsuspends.\n\t\t\t\tunsuspend();\n\t\t\t} else {\n\t\t\t\tnode.push(unsuspend);\n\t\t\t\tresolve(list, child, node);\n\t\t\t}\n\t\t};\n\t\tif (delegated) {\n\t\t\tdelegated(wrappedUnsuspend);\n\t\t} else {\n\t\t\twrappedUnsuspend();\n\t\t}\n\t};\n};\n\nSuspenseList.prototype.render = function(props) {\n\tthis._next = null;\n\tthis._map = new Map();\n\n\tconst children = toChildArray(props.children);\n\tif (props.revealOrder && props.revealOrder[0] === 'b') {\n\t\t// If order === 'backwards' (or, well, anything starting with a 'b')\n\t\t// then flip the child list around so that the last child will be\n\t\t// the first in the linked list.\n\t\tchildren.reverse();\n\t}\n\t// Build the linked list. Iterate through the children in reverse order\n\t// so that `_next` points to the first linked list node to be resolved.\n\tfor (let i = children.length; i--; ) {\n\t\t// Create a new linked list node as an array of form:\n\t\t// \t[suspended_count, resolved_count, next_node]\n\t\t// where suspended_count and resolved_count are numeric counters for\n\t\t// keeping track how many times a node has been suspended and resolved.\n\t\t//\n\t\t// Note that suspended_count starts from 1 instead of 0, so we can block\n\t\t// processing callbacks until componentDidMount has been called. In a sense\n\t\t// node is suspended at least until componentDidMount gets called!\n\t\t//\n\t\t// Pending callbacks are added to the end of the node:\n\t\t// \t[suspended_count, resolved_count, next_node, callback_0, callback_1, ...]\n\t\tthis._map.set(children[i], (this._next = [1, 0, this._next]));\n\t}\n\treturn props.children;\n};\n\nSuspenseList.prototype.componentDidUpdate = SuspenseList.prototype.componentDidMount = function() {\n\t// Iterate through all children after mounting for two reasons:\n\t// 1. As each node[SUSPENDED_COUNT] starts from 1, this iteration increases\n\t//    each node[RELEASED_COUNT] by 1, therefore balancing the counters.\n\t//    The nodes can now be completely consumed from the linked list.\n\t// 2. Handle nodes that might have gotten resolved between render and\n\t//    componentDidMount.\n\tthis._map.forEach((node, child) => {\n\t\tresolve(this, child, node);\n\t});\n};\n","import {\n\trender as preactRender,\n\thydrate as preactHydrate,\n\toptions,\n\ttoChildArray,\n\tComponent\n} from 'preact';\n\nexport const REACT_ELEMENT_TYPE =\n\t(typeof Symbol != 'undefined' && Symbol.for && Symbol.for('react.element')) ||\n\t0xeac7;\n\nconst CAMEL_PROPS = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;\n\nconst IS_DOM = typeof document !== 'undefined';\n\n// Input types for which onchange should not be converted to oninput.\n// type=\"file|checkbox|radio\", plus \"range\" in IE11.\n// (IE11 doesn't support Symbol, which we use here to turn `rad` into `ra` which matches \"range\")\nconst onChangeInputType = type =>\n\t(typeof Symbol != 'undefined' && typeof Symbol() == 'symbol'\n\t\t? /fil|che|rad/i\n\t\t: /fil|che|ra/i\n\t).test(type);\n\n// Some libraries like `react-virtualized` explicitly check for this.\nComponent.prototype.isReactComponent = {};\n\n// `UNSAFE_*` lifecycle hooks\n// Preact only ever invokes the unprefixed methods.\n// Here we provide a base \"fallback\" implementation that calls any defined UNSAFE_ prefixed method.\n// - If a component defines its own `componentDidMount()` (including via defineProperty), use that.\n// - If a component defines `UNSAFE_componentDidMount()`, `componentDidMount` is the alias getter/setter.\n// - If anything assigns to an `UNSAFE_*` property, the assignment is forwarded to the unprefixed property.\n// See https://github.com/preactjs/preact/issues/1941\n[\n\t'componentWillMount',\n\t'componentWillReceiveProps',\n\t'componentWillUpdate'\n].forEach(key => {\n\tObject.defineProperty(Component.prototype, key, {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn this['UNSAFE_' + key];\n\t\t},\n\t\tset(v) {\n\t\t\tObject.defineProperty(this, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: v\n\t\t\t});\n\t\t}\n\t});\n});\n\n/**\n * Proxy render() since React returns a Component reference.\n * @param {import('./internal').VNode} vnode VNode tree to render\n * @param {import('./internal').PreactElement} parent DOM node to render vnode tree into\n * @param {() => void} [callback] Optional callback that will be called after rendering\n * @returns {import('./internal').Component | null} The root component reference or null\n */\nexport function render(vnode, parent, callback) {\n\t// React destroys any existing DOM nodes, see #1727\n\t// ...but only on the first render, see #1828\n\tif (parent._children == null) {\n\t\tparent.textContent = '';\n\t}\n\n\tpreactRender(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nexport function hydrate(vnode, parent, callback) {\n\tpreactHydrate(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nlet oldEventHook = options.event;\noptions.event = e => {\n\tif (oldEventHook) e = oldEventHook(e);\n\te.persist = empty;\n\te.isPropagationStopped = isPropagationStopped;\n\te.isDefaultPrevented = isDefaultPrevented;\n\treturn (e.nativeEvent = e);\n};\n\nfunction empty() {}\n\nfunction isPropagationStopped() {\n\treturn this.cancelBubble;\n}\n\nfunction isDefaultPrevented() {\n\treturn this.defaultPrevented;\n}\n\nlet classNameDescriptor = {\n\tconfigurable: true,\n\tget() {\n\t\treturn this.class;\n\t}\n};\n\nlet oldVNodeHook = options.vnode;\noptions.vnode = vnode => {\n\tlet type = vnode.type;\n\tlet props = vnode.props;\n\tlet normalizedProps = props;\n\n\t// only normalize props on Element nodes\n\tif (typeof type === 'string') {\n\t\tconst nonCustomElement = type.indexOf('-') === -1;\n\t\tnormalizedProps = {};\n\n\t\tfor (let i in props) {\n\t\t\tlet value = props[i];\n\n\t\t\tif (IS_DOM && i === 'children' && type === 'noscript') {\n\t\t\t\t// Emulate React's behavior of not rendering the contents of noscript tags on the client.\n\t\t\t\tcontinue;\n\t\t\t} else if (i === 'value' && 'defaultValue' in props && value == null) {\n\t\t\t\t// Skip applying value if it is null/undefined and we already set\n\t\t\t\t// a default value\n\t\t\t\tcontinue;\n\t\t\t} else if (\n\t\t\t\ti === 'defaultValue' &&\n\t\t\t\t'value' in props &&\n\t\t\t\tprops.value == null\n\t\t\t) {\n\t\t\t\t// `defaultValue` is treated as a fallback `value` when a value prop is present but null/undefined.\n\t\t\t\t// `defaultValue` for Elements with no value prop is the same as the DOM defaultValue property.\n\t\t\t\ti = 'value';\n\t\t\t} else if (i === 'download' && value === true) {\n\t\t\t\t// Calling `setAttribute` with a truthy value will lead to it being\n\t\t\t\t// passed as a stringified value, e.g. `download=\"true\"`. React\n\t\t\t\t// converts it to an empty string instead, otherwise the attribute\n\t\t\t\t// value will be used as the file name and the file will be called\n\t\t\t\t// \"true\" upon downloading it.\n\t\t\t\tvalue = '';\n\t\t\t} else if (/ondoubleclick/i.test(i)) {\n\t\t\t\ti = 'ondblclick';\n\t\t\t} else if (\n\t\t\t\t/^onchange(textarea|input)/i.test(i + type) &&\n\t\t\t\t!onChangeInputType(props.type)\n\t\t\t) {\n\t\t\t\ti = 'oninput';\n\t\t\t} else if (/^onfocus$/i.test(i)) {\n\t\t\t\ti = 'onfocusin';\n\t\t\t} else if (/^onblur$/i.test(i)) {\n\t\t\t\ti = 'onfocusout';\n\t\t\t} else if (/^on(Ani|Tra|Tou|BeforeInp|Compo)/.test(i)) {\n\t\t\t\ti = i.toLowerCase();\n\t\t\t} else if (nonCustomElement && CAMEL_PROPS.test(i)) {\n\t\t\t\ti = i.replace(/[A-Z0-9]/g, '-$&').toLowerCase();\n\t\t\t} else if (value === null) {\n\t\t\t\tvalue = undefined;\n\t\t\t}\n\n\t\t\t// Add support for onInput and onChange, see #3561\n\t\t\t// if we have an oninput prop already change it to oninputCapture\n\t\t\tif (/^oninput$/i.test(i)) {\n\t\t\t\ti = i.toLowerCase();\n\t\t\t\tif (normalizedProps[i]) {\n\t\t\t\t\ti = 'oninputCapture';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnormalizedProps[i] = value;\n\t\t}\n\n\t\t// Add support for array select values: <select multiple value={[]} />\n\t\tif (\n\t\t\ttype == 'select' &&\n\t\t\tnormalizedProps.multiple &&\n\t\t\tArray.isArray(normalizedProps.value)\n\t\t) {\n\t\t\t// forEach() always returns undefined, which we abuse here to unset the value prop.\n\t\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\t\tchild.props.selected =\n\t\t\t\t\tnormalizedProps.value.indexOf(child.props.value) != -1;\n\t\t\t});\n\t\t}\n\n\t\t// Adding support for defaultValue in select tag\n\t\tif (type == 'select' && normalizedProps.defaultValue != null) {\n\t\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\t\tif (normalizedProps.multiple) {\n\t\t\t\t\tchild.props.selected =\n\t\t\t\t\t\tnormalizedProps.defaultValue.indexOf(child.props.value) != -1;\n\t\t\t\t} else {\n\t\t\t\t\tchild.props.selected =\n\t\t\t\t\t\tnormalizedProps.defaultValue == child.props.value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tvnode.props = normalizedProps;\n\n\t\tif (props.class != props.className) {\n\t\t\tclassNameDescriptor.enumerable = 'className' in props;\n\t\t\tif (props.className != null) normalizedProps.class = props.className;\n\t\t\tObject.defineProperty(normalizedProps, 'className', classNameDescriptor);\n\t\t}\n\t}\n\n\tvnode.$$typeof = REACT_ELEMENT_TYPE;\n\n\tif (oldVNodeHook) oldVNodeHook(vnode);\n};\n\n// Only needed for react-relay\nlet currentComponent;\nconst oldBeforeRender = options._render;\noptions._render = function(vnode) {\n\tif (oldBeforeRender) {\n\t\toldBeforeRender(vnode);\n\t}\n\tcurrentComponent = vnode._component;\n};\n\n// This is a very very private internal function for React it\n// is used to sort-of do runtime dependency injection. So far\n// only `react-relay` makes use of it. It uses it to read the\n// context value.\nexport const __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = {\n\tReactCurrentDispatcher: {\n\t\tcurrent: {\n\t\t\treadContext(context) {\n\t\t\t\treturn currentComponent._globalContext[context._id].props.value;\n\t\t\t}\n\t\t}\n\t}\n};\n","import { useState, useEffect } from \"react\";\nimport { GoogleChartVersion, GoogleChartPackages, GoogleViz } from \"../types\";\nimport { useLoadScript } from \"./useLoadScript\";\n\nexport interface IUseLoadGoogleChartsParams {\n  chartVersion?: GoogleChartVersion;\n  chartPackages?: GoogleChartPackages[];\n  chartLanguage?: string;\n  mapsApiKey?: string;\n}\n\n/**\n * Hook to load Google Charts JS API.\n * @param params - Load parameters.\n * @param [params.chartVersion] - Chart version to load.\n * @param [params.chartPackages] - Packages to load.\n * @param [params.chartLanguage] - Languages to load.\n * @param [params.mapsApiKey] - Google Maps api key.\n * @returns\n */\nexport function useLoadGoogleCharts({\n  chartVersion = \"current\",\n  chartPackages = [\"corechart\", \"controls\"],\n  chartLanguage = \"en\",\n  mapsApiKey,\n}: IUseLoadGoogleChartsParams) {\n  const [googleCharts, setGoogleCharts] = useState<GoogleViz | null>(null);\n  const [failed, setFailed] = useState(false);\n\n  useLoadScript(\n    \"https://www.gstatic.com/charts/loader.js\",\n    () => {\n      // @ts-expect-error Getting object from global namespace.\n      const google = window?.google as GoogleViz;\n\n      if (!google) {\n        return;\n      }\n\n      google.charts.load(chartVersion, {\n        packages: chartPackages,\n        language: chartLanguage,\n        mapsApiKey,\n      });\n      google.charts.setOnLoadCallback(() => {\n        setGoogleCharts(google);\n      });\n    },\n    () => {\n      setFailed(true);\n    }\n  );\n\n  return [googleCharts, failed] as const;\n}\n\nexport interface ILoadGoogleChartsProps extends IUseLoadGoogleChartsParams {\n  onLoad?(googleCharts: GoogleViz): void;\n  onError?(): void;\n}\n\n/**\n * Wrapper around useLoadGoogleCharts to use in legacy components.\n */\nexport function LoadGoogleCharts({\n  onLoad,\n  onError,\n  ...params\n}: ILoadGoogleChartsProps) {\n  const [googleCharts, failed] = useLoadGoogleCharts(params);\n\n  useEffect(() => {\n    if (googleCharts && onLoad) {\n      onLoad(googleCharts);\n    }\n  }, [googleCharts]);\n\n  useEffect(() => {\n    if (failed && onError) {\n      onError();\n    }\n  }, [failed]);\n\n  return null;\n}\n","import { useEffect } from \"react\";\n\n/**\n * Hook to load external script.\n * @param src - Source url to load.\n * @param onLoad - Success callback.\n * @param onError - Error callback.\n */\nexport function useLoadScript(\n  src: string,\n  onLoad?: () => void,\n  onError?: () => void\n) {\n  useEffect(() => {\n    if (!document) {\n      return;\n    }\n\n    // Find script tag with same src in DOM.\n    const foundScript = document.querySelector<HTMLScriptElement>(\n      `script[src=\"${src}\"]`\n    );\n\n    // Call onLoad if script marked as loaded.\n    if (foundScript?.dataset.loaded) {\n      onLoad?.();\n      return;\n    }\n\n    // Create or get existed tag.\n    const script = foundScript || document.createElement(\"script\");\n\n    // Set src if no script was found.\n    if (!foundScript) {\n      script.src = src;\n    }\n\n    // Mark script as loaded on load event.\n    const onLoadWithMarker = () => {\n      script.dataset.loaded = \"1\";\n      onLoad?.();\n    };\n\n    script.addEventListener(\"load\", onLoadWithMarker);\n\n    if (onError) {\n      script.addEventListener(\"error\", onError);\n    }\n\n    // Add to DOM if not yet added.\n    if (!foundScript) {\n      document.head.append(script);\n    }\n\n    return () => {\n      script.removeEventListener(\"load\", onLoadWithMarker);\n\n      if (onError) {\n        script.removeEventListener(\"error\", onError);\n      }\n    };\n  }, []);\n}\n","import { options } from 'preact';\nimport { assign } from './util';\n\nlet oldDiffHook = options._diff;\noptions._diff = vnode => {\n\tif (vnode.type && vnode.type._forwarded && vnode.ref) {\n\t\tvnode.props.ref = vnode.ref;\n\t\tvnode.ref = null;\n\t}\n\tif (oldDiffHook) oldDiffHook(vnode);\n};\n\nexport const REACT_FORWARD_SYMBOL =\n\t(typeof Symbol != 'undefined' &&\n\t\tSymbol.for &&\n\t\tSymbol.for('react.forward_ref')) ||\n\t0xf47;\n\n/**\n * Pass ref down to a child. This is mainly used in libraries with HOCs that\n * wrap components. Using `forwardRef` there is an easy way to get a reference\n * of the wrapped component instead of one of the wrapper itself.\n * @param {import('./index').ForwardFn} fn\n * @returns {import('./internal').FunctionComponent}\n */\nexport function forwardRef(fn) {\n\tfunction Forwarded(props) {\n\t\tlet clone = assign({}, props);\n\t\tdelete clone.ref;\n\t\treturn fn(clone, props.ref || null);\n\t}\n\n\t// mobx-react checks for this being present\n\tForwarded.$$typeof = REACT_FORWARD_SYMBOL;\n\t// mobx-react heavily relies on implementation details.\n\t// It expects an object here with a `render` property,\n\t// and prototype.render will fail. Without this\n\t// mobx-react throws.\n\tForwarded.render = Forwarded;\n\n\tForwarded.prototype.isReactComponent = Forwarded._forwarded = true;\n\tForwarded.displayName = 'ForwardRef(' + (fn.displayName || fn.name) + ')';\n\treturn Forwarded;\n}\n","import { ReactGoogleChartProps } from \"./types\";\n\nexport const chartDefaultProps: Partial<ReactGoogleChartProps> = {\n  // <DEPRECATED_PROPS>\n  legend_toggle: false,\n  // </DEPRECATED_PROPS>\n  options: {},\n  legendToggle: false,\n  getChartWrapper: () => {},\n  spreadSheetQueryParameters: {\n    headers: 1,\n    gid: 1,\n  },\n  rootProps: {},\n  chartWrapperParams: {},\n};\n","let uniqueID = 0;\nexport const generateUniqueID = () => {\n  uniqueID += 1;\n  return `reactgooglegraph-${uniqueID}`;\n};\n","export const DEFAULT_CHART_COLORS = [\n  \"#3366CC\",\n  \"#DC3912\",\n  \"#FF9900\",\n  \"#109618\",\n  \"#990099\",\n  \"#3B3EAC\",\n  \"#0099C6\",\n  \"#DD4477\",\n  \"#66AA00\",\n  \"#B82E2E\",\n  \"#316395\",\n  \"#994499\",\n  \"#22AA99\",\n  \"#AAAA11\",\n  \"#6633CC\",\n  \"#E67300\",\n  \"#8B0707\",\n  \"#329262\",\n  \"#5574A6\",\n  \"#3B3EAC\"\n];\n","import { GoogleViz } from \"./types\";\n\nexport const loadDataTableFromSpreadSheet = async (\n  googleViz: GoogleViz,\n  spreadSheetUrl: string,\n  urlParams: {\n    headers?: number;\n    gid?: any;\n    sheet?: string;\n    query?: string;\n    access_token?: string;\n  } = {}\n) => {\n  return new Promise((resolve, reject) => {\n    const headers = `${\n      urlParams.headers ? `headers=${urlParams.headers}` : `headers=0`\n    }`;\n    const queryString = `${\n      urlParams.query ? `&tq=${encodeURIComponent(urlParams.query)}` : ``\n    }`;\n    const gid = `${urlParams.gid ? `&gid=${urlParams.gid}` : \"\"}`;\n    const sheet = `${urlParams.sheet ? `&sheet=${urlParams.sheet}` : \"\"}`;\n    const access_token = `${\n      urlParams.access_token ? `&access_token=${urlParams.access_token}` : \"\"\n    }`;\n    const urlQueryString = `${headers}${gid}${sheet}${queryString}${access_token}`;\n    const urlToSpreadSheet = `${spreadSheetUrl}/gviz/tq?${urlQueryString}`; //&tq=${queryString}`;\n    const query = new googleViz.visualization.Query(urlToSpreadSheet);\n    query.send((response: any) => {\n      if (response.isError()) {\n        reject(\n          `Error in query:  ${response.getMessage()} ${response.getDetailedMessage()}`\n        );\n      } else {\n        resolve(response.getDataTable());\n      }\n    });\n  });\n};\n","import * as React from \"react\";\nimport { chartDefaultProps } from \"./default-props\";\n\nimport { ReactGoogleChartProps } from \"./types\";\nconst { Provider, Consumer } = React.createContext(chartDefaultProps);\n\nexport const ContextProvider = ({\n  children,\n  value,\n}: {\n  children: any;\n  value: ReactGoogleChartProps;\n}) => {\n  return <Provider value={value}>{children}</Provider>;\n};\n\nexport const ContextConsumer = ({\n  render,\n}: {\n  render: (context: ReactGoogleChartProps) => JSX.Element | null;\n}) => {\n  return (\n    <Consumer>\n      {(context) => {\n        return render(context as ReactGoogleChartProps);\n      }}\n    </Consumer>\n  );\n};\n","import * as React from \"react\";\nimport {\n  GoogleViz,\n  GoogleChartWrapper,\n  GoogleDataTable,\n  ReactGoogleChartProps,\n  GoogleChartDashboard,\n} from \"../types\";\nimport { DEFAULT_CHART_COLORS } from \"../constants\";\n\nimport { loadDataTableFromSpreadSheet } from \"../load-data-table-from-spreadsheet\";\nimport { ContextConsumer } from \"../Context\";\n\nconst GRAY_COLOR = \"#CCCCCC\";\nexport type ChartDrawArgs = {\n  data: ReactGoogleChartProps[\"data\"];\n};\n\nexport type GoogleChartDataTableProps = {\n  googleChartWrapper: GoogleChartWrapper;\n  google: GoogleViz;\n  googleChartDashboard: GoogleChartDashboard | null;\n};\ninterface State {\n  hiddenColumns: string[];\n}\nexport class GoogleChartDataTableInner extends React.Component<\n  ReactGoogleChartProps & GoogleChartDataTableProps,\n  State\n> {\n  state = {\n    hiddenColumns: [],\n  } as State;\n\n  private listenToLegendToggle = () => {\n    const { google, googleChartWrapper } = this.props;\n    google.visualization.events.addListener(\n      googleChartWrapper,\n      \"select\",\n      () => {\n        const chart = googleChartWrapper.getChart();\n        const selection = chart.getSelection();\n        const dataTable = googleChartWrapper.getDataTable();\n        if (\n          selection.length === 0 ||\n          // We want to listen to when a whole row is selected. This is the case only when row === null\n          selection[0].row ||\n          !dataTable\n        ) {\n          return;\n        }\n        const columnIndex = selection[0].column;\n        const columnID = this.getColumnID(dataTable, columnIndex);\n        if (this.state.hiddenColumns.includes(columnID)) {\n          this.setState((state) => ({\n            ...state,\n            hiddenColumns: [\n              ...state.hiddenColumns.filter((colID) => colID !== columnID),\n            ],\n          }));\n        } else {\n          this.setState((state) => ({\n            ...state,\n            hiddenColumns: [...state.hiddenColumns, columnID],\n          }));\n        }\n      }\n    );\n  };\n\n  private applyFormatters = (dataTable: GoogleDataTable, formatters: any[]) => {\n    const { google } = this.props;\n    for (let formatter of formatters) {\n      switch (formatter.type) {\n        case \"ArrowFormat\": {\n          const vizFormatter = new google.visualization.ArrowFormat(\n            formatter.options\n          );\n          vizFormatter.format(dataTable, formatter.column);\n          break;\n        }\n        case \"BarFormat\": {\n          const vizFormatter = new google.visualization.BarFormat(\n            formatter.options\n          );\n          vizFormatter.format(dataTable, formatter.column);\n          break;\n        }\n        case \"ColorFormat\": {\n          const vizFormatter = new google.visualization.ColorFormat(\n            formatter.options\n          );\n          const { ranges } = formatter;\n          for (let range of ranges) {\n            vizFormatter.addRange(...range);\n          }\n          vizFormatter.format(dataTable, formatter.column);\n          break;\n        }\n        case \"DateFormat\": {\n          const vizFormatter = new google.visualization.DateFormat(\n            formatter.options\n          );\n          vizFormatter.format(dataTable, formatter.column);\n          break;\n        }\n        case \"NumberFormat\": {\n          const vizFormatter = new google.visualization.NumberFormat(\n            formatter.options\n          );\n          vizFormatter.format(dataTable, formatter.column);\n          break;\n        }\n        case \"PatternFormat\": {\n          const vizFormatter = new google.visualization.PatternFormat(\n            formatter.options\n          );\n          vizFormatter.format(dataTable, formatter.column);\n          break;\n        }\n      }\n    }\n  };\n  private getColumnID = (dataTable: GoogleDataTable, columnIndex: number) => {\n    return (\n      dataTable.getColumnId(columnIndex) ||\n      dataTable.getColumnLabel(columnIndex)\n    );\n  };\n  private draw = async ({\n    data,\n    diffdata,\n    rows,\n    columns,\n    options,\n    legend_toggle,\n    legendToggle,\n    chartType,\n    formatters,\n    spreadSheetUrl,\n    spreadSheetQueryParameters,\n  }: ReactGoogleChartProps) => {\n    const { google, googleChartWrapper } = this.props;\n    let dataTable: GoogleDataTable;\n    let chartDiff = null;\n    if (diffdata) {\n      const oldData = google.visualization.arrayToDataTable(diffdata.old);\n      const newData = google.visualization.arrayToDataTable(diffdata.new);\n      chartDiff = google.visualization[chartType].prototype.computeDiff(\n        oldData,\n        newData\n      );\n    }\n    if (data !== null) {\n      if (Array.isArray(data)) {\n        dataTable = google.visualization.arrayToDataTable(data);\n      } else {\n        dataTable = new google.visualization.DataTable(data);\n      }\n    } else if (rows && columns) {\n      dataTable = google.visualization.arrayToDataTable([columns, ...rows]);\n    } else if (spreadSheetUrl) {\n      dataTable = (await loadDataTableFromSpreadSheet(\n        google,\n        spreadSheetUrl,\n        spreadSheetQueryParameters\n      )) as GoogleDataTable;\n    } else {\n      dataTable = google.visualization.arrayToDataTable([]);\n    }\n    const columnCount = dataTable.getNumberOfColumns();\n    for (let i = 0; i < columnCount; i += 1) {\n      const columnID = this.getColumnID(dataTable, i);\n      if (this.state.hiddenColumns.includes(columnID)) {\n        const previousColumnLabel = dataTable.getColumnLabel(i);\n        const previousColumnID = dataTable.getColumnId(i);\n        const previousColumnType = dataTable.getColumnType(i);\n        dataTable.removeColumn(i);\n        dataTable.addColumn({\n          label: previousColumnLabel,\n          id: previousColumnID,\n          type: previousColumnType,\n        });\n      }\n    }\n    const chart = googleChartWrapper.getChart();\n    if (googleChartWrapper.getChartType() === \"Timeline\") {\n      chart && chart.clearChart();\n    }\n    googleChartWrapper.setChartType(chartType);\n    googleChartWrapper.setOptions(options || {});\n    googleChartWrapper.setDataTable(dataTable);\n    googleChartWrapper.draw();\n    if (this.props.googleChartDashboard !== null) {\n      this.props.googleChartDashboard.draw(dataTable);\n    }\n\n    if (chartDiff) {\n      googleChartWrapper.setDataTable(chartDiff);\n      googleChartWrapper.draw();\n    }\n    if (formatters) {\n      this.applyFormatters(dataTable, formatters);\n      googleChartWrapper.setDataTable(dataTable);\n      googleChartWrapper.draw();\n    }\n    if (legendToggle === true || legend_toggle === true) {\n      this.grayOutHiddenColumns({ options });\n    }\n    return;\n  };\n  private grayOutHiddenColumns = ({\n    options,\n  }: {\n    options: ReactGoogleChartProps[\"options\"];\n  }) => {\n    const { googleChartWrapper } = this.props;\n    const dataTable = googleChartWrapper.getDataTable();\n    if (!dataTable) return;\n    const columnCount = dataTable.getNumberOfColumns();\n    const hasAHiddenColumn = this.state.hiddenColumns.length > 0;\n    if (hasAHiddenColumn === false) return;\n    const colors = Array.from({ length: columnCount - 1 }).map(\n      (dontcare, i) => {\n        const columnID = this.getColumnID(dataTable, i + 1);\n        if (this.state.hiddenColumns.includes(columnID)) {\n          return GRAY_COLOR;\n        } else if (options && options.colors) {\n          return options.colors[i];\n        } else {\n          return DEFAULT_CHART_COLORS[i];\n        }\n      }\n    );\n    googleChartWrapper.setOptions({\n      ...options,\n      colors,\n    });\n    googleChartWrapper.draw();\n  };\n  private onResize = () => {\n    const { googleChartWrapper } = this.props;\n    googleChartWrapper.draw();\n  };\n  componentDidMount() {\n    this.draw(this.props);\n    window.addEventListener(\"resize\", this.onResize);\n    if (this.props.legend_toggle || this.props.legendToggle) {\n      this.listenToLegendToggle();\n    }\n  }\n\n  componentWillUnmount() {\n    const { google, googleChartWrapper } = this.props;\n    window.removeEventListener(\"resize\", this.onResize);\n    google.visualization.events.removeAllListeners(googleChartWrapper);\n    if (googleChartWrapper.getChartType() === \"Timeline\") {\n      googleChartWrapper.getChart() &&\n        googleChartWrapper.getChart().clearChart();\n    }\n  }\n\n  componentDidUpdate() {\n    this.draw(this.props);\n  }\n  render() {\n    return null;\n  }\n}\n\nexport class GoogleChartDataTable extends React.Component<GoogleChartDataTableProps> {\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n  shouldComponentUpdate() {\n    return false;\n  }\n  render() {\n    const { google, googleChartWrapper, googleChartDashboard } = this.props;\n    return (\n      <ContextConsumer\n        render={(props) => {\n          return (\n            <GoogleChartDataTableInner\n              {...props}\n              google={google}\n              googleChartWrapper={googleChartWrapper}\n              googleChartDashboard={googleChartDashboard}\n            />\n          );\n        }}\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  GoogleViz,\n  GoogleChartWrapper,\n  ReactGoogleChartProps,\n  ReactGoogleChartEvent,\n} from \"../types\";\n\nimport { ContextConsumer } from \"../Context\";\n\nexport type ChartDrawArgs = {\n  data: ReactGoogleChartProps[\"data\"];\n};\n\nexport interface Props {\n  googleChartWrapper: GoogleChartWrapper;\n  google: GoogleViz;\n}\n\nexport interface ListenToEventsArgs {\n  googleChartWrapper: GoogleChartWrapper;\n  google: GoogleViz;\n  chartEvents: ReactGoogleChartEvent[] | null;\n}\n\nexport class GoogleChartEvents extends React.Component<Props> {\n  shouldComponentUpdate() {\n    return false;\n  }\n  listenToEvents({\n    chartEvents,\n    google,\n    googleChartWrapper,\n  }: ListenToEventsArgs) {\n    if (!chartEvents) {\n      return;\n    }\n    google.visualization.events.removeAllListeners(googleChartWrapper);\n    for (let event of chartEvents) {\n      const { eventName, callback } = event;\n      google.visualization.events.addListener(\n        googleChartWrapper,\n        eventName,\n        (...args: any[]) => {\n          callback({\n            chartWrapper: googleChartWrapper,\n            props: this.props as any,\n            google: google,\n            eventArgs: args,\n          });\n        }\n      );\n    }\n  }\n  render() {\n    const { google, googleChartWrapper } = this.props;\n    return (\n      <ContextConsumer\n        render={(propsFromContext) => {\n          this.listenToEvents({\n            chartEvents: propsFromContext.chartEvents || null,\n            google,\n            googleChartWrapper,\n          });\n          return null;\n        }}\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  GoogleViz,\n  GoogleChartWrapper,\n  ReactGoogleChartProps,\n  GoogleChartControlProp,\n  GoogleChartControl,\n  GoogleChartDashboard,\n  GoogleChartEditor,\n} from \"../types\";\nimport { generateUniqueID } from \"../generate-unique-id\";\nimport { GoogleChartDataTable } from \"./GoogleChartDataTable\";\nimport { GoogleChartEvents } from \"./GoogleChartEvents\";\n\nexport type Props = {\n  google: GoogleViz;\n  graphID?: string | null;\n  graph_id?: string | null;\n  options?: ReactGoogleChartProps[\"options\"];\n  chartWrapperParams?: {};\n  chartType: ReactGoogleChartProps[\"chartType\"];\n  width?: ReactGoogleChartProps[\"width\"];\n  height?: ReactGoogleChartProps[\"height\"];\n  style?: ReactGoogleChartProps[\"style\"];\n  className?: ReactGoogleChartProps[\"className\"];\n  rootProps?: ReactGoogleChartProps[\"rootProps\"];\n} & ReactGoogleChartProps;\n\nexport interface State {\n  googleChartWrapper: GoogleChartWrapper | null;\n  isReady: boolean;\n  googleChartDashboard: GoogleChartDashboard | null;\n  googleChartEditor: GoogleChartEditor | null;\n  googleChartControls:\n    | { control: GoogleChartControl; controlProp: GoogleChartControlProp }[]\n    | null;\n}\n\nlet controlCounter = 0;\n\nexport class GoogleChart extends React.Component<Props, State> {\n  state = {\n    googleChartWrapper: null,\n    googleChartDashboard: null,\n    googleChartControls: null,\n    googleChartEditor: null,\n    isReady: false,\n  } as State;\n  graphID: null | string = null;\n  private dashboard_ref: React.RefObject<HTMLDivElement> = React.createRef();\n  private toolbar_ref: React.RefObject<HTMLDivElement> = React.createRef();\n  private getGraphID = () => {\n    const { graphID, graph_id } = this.props;\n    let instanceGraphID: string;\n    if (!graphID && !graph_id) {\n      if (!this.graphID) {\n        instanceGraphID = generateUniqueID();\n      } else {\n        instanceGraphID = this.graphID;\n      }\n    } else if (graphID && !graph_id) {\n      instanceGraphID = graphID as string;\n    } else if (graph_id && !graphID) {\n      instanceGraphID = graph_id as string;\n    } else {\n      instanceGraphID = graphID as string;\n    }\n    this.graphID = instanceGraphID;\n    return this.graphID as string;\n  };\n  private getControlID = (id: undefined | string, index: number) => {\n    controlCounter += 1;\n    let controlID: string;\n    if (typeof id === \"undefined\") {\n      controlID = `googlechart-control-${index}-${controlCounter}`;\n    } else {\n      controlID = id;\n    }\n    return controlID;\n  };\n\n  addControls = (\n    googleChartWrapper: GoogleChartWrapper,\n    googleChartDashboard: GoogleChartDashboard\n  ) => {\n    const { google, controls } = this.props;\n\n    const googleChartControls = !controls\n      ? null\n      : controls.map((control, i) => {\n          const {\n            controlID: controlIDMaybe,\n            controlType,\n            options: controlOptions,\n            controlWrapperParams,\n          } = control;\n          const controlID = this.getControlID(controlIDMaybe, i);\n          return {\n            controlProp: control,\n            control: new google.visualization.ControlWrapper({\n              containerId: controlID,\n              controlType,\n              options: controlOptions,\n              ...controlWrapperParams,\n            }),\n          };\n        });\n    if (!googleChartControls) {\n      return null;\n    }\n    googleChartDashboard.bind(\n      googleChartControls.map(({ control }) => control),\n      googleChartWrapper\n    );\n    for (let chartControl of googleChartControls) {\n      const { control, controlProp } = chartControl;\n      const { controlEvents = [] } = controlProp;\n      for (let event of controlEvents) {\n        const { callback, eventName } = event;\n        google.visualization.events.removeListener(\n          control,\n          eventName,\n          callback\n        );\n        google.visualization.events.addListener(\n          control,\n          eventName,\n          (...args: any[]) => {\n            callback({\n              chartWrapper: googleChartWrapper,\n              controlWrapper: control,\n              props: this.props as any,\n              google: google,\n              eventArgs: args,\n            });\n          }\n        );\n      }\n    }\n    return googleChartControls;\n  };\n\n  componentDidMount() {\n    const {\n      options,\n      google,\n      chartType,\n      chartWrapperParams,\n      toolbarItems,\n      getChartEditor,\n      getChartWrapper,\n    } = this.props;\n\n    const chartConfig = {\n      chartType,\n      options,\n      containerId: this.getGraphID(),\n      ...chartWrapperParams,\n    };\n    const googleChartWrapper = new google.visualization.ChartWrapper(\n      chartConfig\n    );\n    googleChartWrapper.setOptions(options || {});\n    if (getChartWrapper) {\n      getChartWrapper(googleChartWrapper, google);\n    }\n    const googleChartDashboard = new google.visualization.Dashboard(\n      this.dashboard_ref\n    );\n\n    const googleChartControls = this.addControls(\n      googleChartWrapper,\n      googleChartDashboard\n    );\n    if (toolbarItems) {\n      google.visualization.drawToolbar(\n        this.toolbar_ref.current as HTMLDivElement,\n        toolbarItems\n      );\n    }\n    let googleChartEditor: null | GoogleChartEditor = null;\n    if (getChartEditor) {\n      googleChartEditor = new google.visualization.ChartEditor();\n      getChartEditor({\n        chartEditor: googleChartEditor,\n        chartWrapper: googleChartWrapper,\n        google,\n      });\n    }\n\n    this.setState({\n      googleChartEditor,\n      googleChartControls: googleChartControls,\n      googleChartDashboard: googleChartDashboard,\n      googleChartWrapper,\n      isReady: true,\n    });\n  }\n  componentDidUpdate() {\n    if (!this.state.googleChartWrapper) return;\n    if (!this.state.googleChartDashboard) return;\n    if (!this.state.googleChartControls) return;\n\n    const { controls } = this.props;\n    if (controls) {\n      for (let i = 0; i < controls.length; i += 1) {\n        const { controlType, options, controlWrapperParams } = controls[i];\n        if (controlWrapperParams && \"state\" in controlWrapperParams) {\n          this.state.googleChartControls[i].control.setState(\n            controlWrapperParams[\"state\"]\n          );\n        }\n        this.state.googleChartControls[i].control.setOptions(options);\n        this.state.googleChartControls[i].control.setControlType(controlType);\n      }\n    }\n  }\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    return (\n      this.state.isReady !== nextState.isReady ||\n      nextProps.controls !== this.props.controls\n    );\n  }\n  renderChart = () => {\n    const { width, height, options, style, className, rootProps, google } =\n      this.props;\n\n    const divStyle = {\n      height: height || (options && options.height),\n      width: width || (options && options.width),\n      ...style,\n    };\n    return (\n      <div\n        id={this.getGraphID()}\n        style={divStyle}\n        className={className}\n        {...rootProps}\n      >\n        {this.state.isReady && this.state.googleChartWrapper !== null ? (\n          <React.Fragment>\n            <GoogleChartDataTable\n              googleChartWrapper={this.state.googleChartWrapper}\n              google={google}\n              googleChartDashboard={this.state.googleChartDashboard}\n            />\n            <GoogleChartEvents\n              googleChartWrapper={this.state.googleChartWrapper}\n              google={google}\n            />\n          </React.Fragment>\n        ) : null}\n      </div>\n    );\n  };\n  renderControl = (\n    filter = ({\n      control,\n      controlProp,\n    }: {\n      control: GoogleChartControl;\n      controlProp: GoogleChartControlProp;\n    }) => true\n  ) => {\n    return this.state.isReady && this.state.googleChartControls !== null ? (\n      <React.Fragment>\n        {this.state.googleChartControls\n          .filter(({ controlProp, control }) => {\n            return filter({ control, controlProp });\n          })\n          .map(({ control, controlProp }) => {\n            return (\n              <div\n                key={control.getContainerId()}\n                id={control.getContainerId()}\n              />\n            );\n          })}\n      </React.Fragment>\n    ) : null;\n  };\n  renderToolBar = () => {\n    if (!this.props.toolbarItems) return null;\n    return <div ref={this.toolbar_ref} />;\n  };\n  render() {\n    const { width, height, options, style } = this.props;\n\n    const divStyle = {\n      height: height || (options && options.height),\n      width: width || (options && options.width),\n      ...style,\n    };\n    if (this.props.render) {\n      return (\n        <div ref={this.dashboard_ref} style={divStyle}>\n          <div ref={this.toolbar_ref} id=\"toolbar\" />\n          {this.props.render({\n            renderChart: this.renderChart,\n            renderControl: this.renderControl,\n            renderToolbar: this.renderToolBar,\n          })}\n        </div>\n      );\n    } else {\n      return (\n        <div ref={this.dashboard_ref} style={divStyle}>\n          {this.renderControl(({ controlProp }) => {\n            return controlProp.controlPosition !== \"bottom\";\n          })}\n          {this.renderChart()}\n          {this.renderControl(({ controlProp }) => {\n            return controlProp.controlPosition === \"bottom\";\n          })}\n          {this.renderToolBar()}\n        </div>\n      );\n    }\n  }\n}\n","import * as React from \"react\";\n\nimport {\n  GoogleViz,\n  ReactGoogleChartProps,\n  ReactGoogleChartState,\n} from \"./types\";\nimport { LoadGoogleCharts } from \"./hooks\";\nimport { chartDefaultProps } from \"./default-props\";\nimport { GoogleChart } from \"./components/GoogleChart\";\nimport { ContextProvider } from \"./Context\";\n\nexport class Chart extends React.Component<\n  ReactGoogleChartProps,\n  ReactGoogleChartState\n> {\n  _isMounted = false;\n\n  state = {\n    loadingStatus: \"loading\" as ReactGoogleChartState[\"loadingStatus\"],\n    google: null as ReactGoogleChartState[\"google\"],\n  };\n\n  static defaultProps = chartDefaultProps;\n\n  render() {\n    const {\n      chartLanguage,\n      chartPackages,\n      chartVersion,\n      mapsApiKey,\n      loader,\n      errorElement,\n    } = this.props;\n    return (\n      <ContextProvider value={this.props as ReactGoogleChartProps}>\n        {this.state.loadingStatus === \"ready\" && this.state.google !== null ? (\n          <GoogleChart\n            {...(this.props as ReactGoogleChartProps)}\n            google={this.state.google}\n          />\n        ) : this.state.loadingStatus === \"errored\" && errorElement ? (\n          errorElement\n        ) : (\n          loader\n        )}\n        <LoadGoogleCharts\n          chartLanguage={chartLanguage}\n          chartPackages={chartPackages}\n          chartVersion={chartVersion}\n          mapsApiKey={mapsApiKey}\n          onLoad={this.onLoad}\n          onError={this.onError}\n        />\n      </ContextProvider>\n    );\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  onLoad = (google: GoogleViz) => {\n    if (this.props.onLoad) {\n      this.props.onLoad(google);\n    }\n    if (this.isFullyLoaded(google)) {\n      this.onSuccess(google);\n    } else {\n      // IE11: window.google is not fully set, we have to wait\n      const id = setInterval(() => {\n        const google = (\n          window as Window & {\n            google?: GoogleViz;\n          }\n        ).google;\n\n        if (this._isMounted) {\n          if (google && this.isFullyLoaded(google)) {\n            clearInterval(id);\n            this.onSuccess(google);\n          }\n        } else {\n          clearInterval(id);\n        }\n      }, 1000);\n    }\n  };\n\n  onSuccess = (google: GoogleViz) => {\n    this.setState({\n      loadingStatus: \"ready\",\n      google,\n    });\n  };\n\n  onError = () => {\n    this.setState({\n      loadingStatus: \"errored\",\n    });\n  };\n\n  isFullyLoaded(google: GoogleViz) {\n    const { controls, toolbarItems, getChartEditor } = this.props;\n\n    return (\n      google &&\n      google.visualization &&\n      google.visualization.ChartWrapper &&\n      google.visualization.Dashboard &&\n      (!controls || google.visualization.ChartWrapper) &&\n      (!getChartEditor || google.visualization.ChartEditor) &&\n      (!toolbarItems || google.visualization.drawToolbar)\n    );\n  }\n}\n\nexport default Chart;\n","// Complete Google Charts Type Definition : https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/google.visualization/index.d.ts\n\nexport type GoogleVizDrawToolbar = (\n  toolbarContainer: HTMLDivElement,\n  components: GoogleChartToolbarItem[]\n) => any;\n\nexport type GoogleViz = {\n  charts: GoogleChartLoader;\n  visualization: {\n    ChartWrapper: GoogleChartWrapper;\n    ChartEditor: GoogleChartEditor;\n    DataTable: GoogleDataTable;\n    events: GoogleVizEvents;\n    arrayToDataTable: GoogleArrayToDataTable;\n    drawToolbar: GoogleVizDrawToolbar;\n    [otherKeys: string]: any;\n  };\n};\n\nexport type GoogleChartTicks = (number | Date)[];\n\nexport type GoogleChartEditor = {\n  new (): GoogleChartEditor;\n  openDialog: (\n    chartWrapper: GoogleChartWrapper,\n    chartEditorOptions?: { dataSourceInput?: any; [otherKeyMaybe: string]: any }\n  ) => null;\n  getChartWrapper: () => GoogleChartWrapper;\n  setChartWrapper: (chartWrapper: GoogleChartWrapper) => GoogleChartWrapper;\n  closeDialog: () => null;\n};\n\nexport type GoogleChartLoaderOptions = {\n  packages?: GoogleChartPackages[];\n  language?: string;\n  mapsApiKey?: string;\n};\nexport type GoogleChartLoader = {\n  load: (\n    version: GoogleChartVersion,\n    googleChartOptions: GoogleChartLoaderOptions\n  ) => void;\n  setOnLoadCallback: (callback: () => void) => void;\n};\nexport interface ChartWrapperProps {\n  chartType: GoogleChartWrapperChartType;\n  containerId?: string;\n  options?: {\n    width?: number;\n    height?: number;\n    is3D?: boolean;\n    title?: string;\n    backgroundColor: string;\n  };\n  dataTable?: {};\n  dataSourceUrl?: string;\n  query?: string;\n  refreshInterval?: number;\n  view?: any[] | {};\n  render?: (props: ChartWrapperProps, chartWrapper: GoogleChartWrapper) => any;\n  children?: (\n    props: ChartWrapperProps,\n    chartWrapper: GoogleChartWrapper\n  ) => any;\n}\n\nexport type VizEventsProps = {\n  chartWrapper: GoogleChartWrapper;\n  onReady?: (chartWrapper: GoogleChartWrapper) => any;\n  onError?: (chartWrapper: GoogleChartWrapper) => any;\n  onSelect?: (selection: Array<{ row?: any; column?: any }>) => any;\n  render?: (props: VizEventsProps, chartWrapper: GoogleChartWrapper) => any;\n  children?: (props: VizEventsProps, chartWrapper: GoogleChartWrapper) => any;\n};\n\n/*\n *\n * <GoogleChartsTypes>\n *\n */\n\n/*\n *\n * Reference + Docs:\n * https://developers.google.com/chart/interactive/docs/reference#constructor_3\n * https://developers.google.com/chart/interactive/docs/reference#google.visualization.drawchart\n *\n */\nexport type GoogleChartWrapperChartType =\n  | \"AnnotationChart\"\n  | \"AreaChart\"\n  | \"BarChart\"\n  | \"BubbleChart\"\n  | \"Calendar\"\n  | \"CandlestickChart\"\n  | \"ColumnChart\"\n  | \"ComboChart\"\n  | \"DiffChart\"\n  | \"DonutChart\"\n  | \"Gantt\"\n  | \"Gauge\"\n  | \"GeoChart\"\n  | \"Histogram\"\n  | \"LineChart\"\n  | \"Line\"\n  | \"Bar\"\n  | \"Map\"\n  | \"OrgChart\"\n  | \"PieChart\"\n  | \"Sankey\"\n  | \"ScatterChart\"\n  | \"Scatter\"\n  | \"SteppedAreaChart\"\n  | \"Table\"\n  | \"Timeline\"\n  | \"TreeMap\"\n  | \"WaterfallChart\"\n  | \"WordTree\";\n\n// https://developers.google.com/chart/interactive/docs/reference#google.visualization.drawchart\nexport interface ChartWrapperOptions {\n  chartType: string;\n  containerId: string;\n  options: Partial<{\n    width: number;\n    height: number;\n    is3D: boolean;\n    title: string;\n    backgroundColor: string;\n    hAxis?: {\n      minValue?: any;\n      maxValue?: any;\n      ticks?: GoogleChartTicks;\n      title?: string;\n      viewWindow?: { max?: any; min?: any };\n      [otherOptionKey: string]: any;\n    };\n    vAxis?: {\n      minValue?: any;\n      maxValue?: any;\n      ticks?: GoogleChartTicks;\n      title?: string;\n      viewWindow?: { max?: any; min?: any };\n      [otherOptionKey: string]: any;\n    };\n    legend: any;\n    colors: string[];\n    [otherOptionKey: string]: any;\n  }>;\n  dataTable?: GoogleDataTable;\n  dataSourceUrl?: string;\n  query?: string;\n  refreshInterval?: number;\n  view: any[] | {};\n  [otherOptionKey: string]: any;\n}\n\nexport type GoogleChartAction = {\n  id: string;\n  text: string;\n  action: (chartWrapper: GoogleChartWrapper) => void;\n};\n\nexport type GoogleChartControlProp = {\n  controlType:\n    | \"CategoryFilter\"\n    | \"ChartRangeFilter\"\n    | \"DateRangeFilter\"\n    | \"NumberRangeFilter\"\n    | \"StringFilter\";\n  options: {};\n  controlWrapperParams?: {};\n  controlID?: string;\n  controlPosition?: \"top\" | \"bottom\";\n  controlEvents?: ReactGoogleChartEvent[];\n};\n\nexport type GoogleChartWrapper = {\n  new (chartWrapperOptions: Partial<ChartWrapperOptions>): GoogleChartWrapper;\n  draw: (chartArgs?: ChartWrapperProps) => any;\n  toJSON: () => string;\n  clone: () => GoogleChartWrapper;\n  getDataSourceUrl: () => string;\n  getDataTable: () => GoogleDataTable | null; // null if datasourceurl set or ref to DataTable\n  getChartType: () => GoogleChartWrapperChartType;\n  getChartName: () => string;\n  getChart: () => {\n    removeAction: (actionID: string) => void;\n    getSelection: () => { row?: any; column?: any }[];\n    setAction: (ChartAction: GoogleChartAction) => void;\n    getImageURI: () => void;\n    clearChart: () => void; // Clears the chart, and releases all of its allocated resources.\n  }; // ref to chart\n  getContainerId: () => string;\n  getQuery: () => string;\n  getRefreshInterval: () => number;\n  getOption: (key: string, opt_default_value?: any) => any; // returns opt_default_value if key not found\n  getOptions: () => {};\n  getSelection: () => { row?: any; column?: any }[];\n  getView: () => {} | any[]; // Same format as toJSON\n\n  setDataSourceUrl: (url: string) => void;\n  setDataTable: (table: any) => void;\n  setChartType: (chartType: GoogleChartWrapperChartType) => void;\n  setChartName: (name: string) => void; // Sets an arbitrary name for the chart. This is not shown anywhere on the chart, unless a custom chart is explicitly designed to use it.\n  setContainerId: (id: string) => void; // Sets the ID of the containing DOM element for the chart.\n  setQuery: (query_string: string) => void; // Sets a query string, if this chart queries a data source. You must also set the data source URL if specifying this value.\n  setRefreshInterval: (interval: number) => void; // Sets the refresh interval for this chart, if it queries a data source. You must also set a data source URL if specifying this value. Zero indicates no refresh.\n  setOption: (key: string, value: any) => void; // \tSets a single chart option value, where key is the option name and value is the value. To unset an option, pass in null for the value. Note that key may be a qualified name, such as 'vAxis.title'.\n  setOptions: (options_obj: Partial<ChartWrapperOptions[\"options\"]>) => void; //\n};\n\nexport type GoogleVizEventName =\n  | \"ready\"\n  | \"error\"\n  | \"select\"\n  | \"animationfinish\"\n  | \"statechange\"\n  | \"ok\"\n  | \"cancel\"\n  | \"animationstart\";\n\nexport type GoogleVizEvents = {\n  addListener: (\n    chartWrapper: GoogleChartWrapper | GoogleChartControl | GoogleChartEditor,\n    name: GoogleVizEventName,\n    onEvent: (chartWrapper: GoogleChartWrapper) => any\n  ) => any;\n  removeListener: (\n    chartWrapper: GoogleChartWrapper,\n    name: GoogleVizEventName,\n    callback: Function\n  ) => any;\n  removeAllListeners: (chartWrapper: GoogleChartWrapper) => any;\n};\n\nexport type GoogleChartPackages =\n  | \"corechart\"\n  | \"charteditor\"\n  | \"controls\"\n  | \"calendar\"\n  | \"gantt\"\n  | \"gauge\"\n  | \"geochart\"\n  | \"map\"\n  | \"orgchart\"\n  | \"sankey\"\n  | \"table\"\n  | \"timeline\"\n  | \"treemap\"\n  | \"wordtree\";\n\nexport type GoogleChartVersion = \"current\" | \"upcoming\";\n\nexport type GoogleDataTableColumnType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"datetime\"\n  | \"timeofday\";\n\n// export type GoogleDataTable = {\n//   addColumn: (type: GoogleDataTableColumnType) => number;\n// };\n\n// Reference https://developers.google.com/chart/interactive/docs/roles\nexport enum GoogleDataTableColumnRoleType {\n  annotation = \"annotation\",\n  annotationText = \"annotationText\",\n  certainty = \"certainty\",\n  emphasis = \"emphasis\",\n  interval = \"interval\",\n  scope = \"scope\",\n  style = \"style\",\n  tooltip = \"tooltip\",\n  domain = \"domain\",\n}\n\nexport type GoogleDataTableColumn =\n  | {\n      type: GoogleDataTableColumnType;\n      label?: string; //  A label for the column.\n      role?: GoogleDataTableColumnRoleType;\n      pattern?: string;\n      p?: {};\n      id?: string;\n    }\n  | string;\n\n// Ref : https://developers.google.com/chart/interactive/docs/reference#dataparam\n\nexport type GoogleDataTableCell =\n  | {\n      v?: any; // The cell value. Type should match DataTableColumn type field\n      f?: string; // A string version of the v value, formatted for display.\n      p?: {};\n    }\n  | string\n  | number\n  | boolean\n  | Date;\n\nexport type GoogleDataTableRow = GoogleDataTableCell[];\n\nexport type GoogleDataTableJS = {\n  cols: GoogleDataTableColumn[];\n  rows: {\n    c: GoogleDataTableRow;\n  }[];\n  p?: {};\n};\n\n// Reference : https://developers.google.com/chart/interactive/docs/reference#DataTable\n\nexport type GoogleDataTableRowFilter = {\n  column: number;\n  value: any;\n  minValue?: any;\n  maxValue?: any;\n};\n\nexport type GoogleDataTableSortColumns =\n  | number\n  | {\n      column: number;\n      desc: boolean;\n    }\n  | number[]\n  | {\n      column: number;\n      desc: boolean;\n    }[];\n\nexport type GoogleDataTable = {\n  // https://developers.google.com/chart/interactive/docs/reference#dataparam\n  new (dataParam: any): GoogleDataTable;\n  addColumn: (column: GoogleDataTableColumn) => number;\n  addRow: (row?: GoogleDataTableRow) => number;\n  addRows: (rows?: GoogleDataTableRow[] | number[] | any[]) => number;\n  clone: () => GoogleDataTable;\n\n  getColumnId: (columnIndex: number) => string;\n  getColumnLabel: (columnIndex: number) => string;\n  getColumnPattern: (columnIndex: number) => string;\n  getColumnProperties: (columnIndex: number) => {};\n  getColumnProperty: (columnIndex: number, name: string) => any;\n  getColumnRange: (columnIndex: number) => {\n    min: number | null;\n    max: number | null;\n  };\n  getColumnRole: (columnIndex: number) => GoogleDataTableColumnRoleType;\n  getColumnType: (columnIndex: number) => GoogleDataTableColumnType;\n  getDistinctValues: (columnIndex: number) => any[];\n  getFilteredRows: (filters: GoogleDataTableRowFilter[]) => number[];\n  getFormattedValue: (rowIndex: number, columnIndex: number) => string;\n  getNumberOfColumns: () => number;\n  getNumberOfRows: () => number;\n  getProperties: (rowIndex: number, columnIndex: number) => {};\n  getProperty: (rowIndex: number, columnIndex: number, name: string) => any;\n  getRowProperties: (rowIndex: number) => {};\n  getRowProperty: (rowIndex: number, name: string) => any;\n  getSortedRows: (sortColumns: GoogleDataTableSortColumns) => number[];\n  getTableProperties: () => {};\n  getTableProperty: (name: string) => any;\n  getValue: (\n    rowIndex: number,\n    columnIndex: number\n  ) => boolean | string | number | Date | number[] | null;\n  insertColumn: (\n    columnIndex: number,\n    type: GoogleDataTableColumnType,\n    label?: string,\n    id?: string\n  ) => void;\n  insertRows: (\n    rowIndex: number,\n    numberOrArray: GoogleDataTableRow[] | number\n  ) => void;\n  removeColumn: (columnIndex: number) => void;\n  removeColumns: (columnIndex: number, numberOfColumns: number) => void;\n  removeRow: (rowIndex: number) => void;\n  removeRows: (rowIndex: number, numberOfColumns: number) => void;\n  setCell: (\n    rowIndex: number,\n    columnIndex: number,\n    value?: any,\n    formattedValue?: string,\n    properties?: {}\n  ) => {};\n  setColumnLabel: (columnIndex: number, label: string) => void;\n  setColumnProperty: (columnIndex: number, name: string, value: any) => void;\n  setColumnProperties: (columnIndex: number, properties: {} | null) => void;\n  setFormattedValue: (\n    rowIndex: number,\n    columnIndex: number,\n    formattedValue: string\n  ) => void;\n  setProperty: (\n    rowIndex: number,\n    columnIndex: number,\n    name: string,\n    value: any\n  ) => void;\n  setProperties: (\n    rowIndex: number,\n    columnIndex: number,\n    properties: {} | null\n  ) => void;\n\n  setRowProperty: (rowIndex: number, name: string, value: any) => void;\n  setRowProperties: (rowIndex: number, properties: {} | null) => void;\n  setTableProperties: (properties: {} | null) => void;\n  setValue: (rowIndex: number, columnIndex: number, value: string) => void;\n  sort: (sortColumns: GoogleDataTableSortColumns) => void;\n  toJSON: () => string; // GoogleDataTableJS\n};\n\nexport type GoogleArrayToDataTable = (\n  data: any[][],\n  isFirstRowLabels?: boolean\n) => GoogleDataTable;\n\nexport type GoogleChartOptions = {\n  width?: number;\n  height?: number;\n  is3D?: boolean;\n  backgroundColor: string;\n\n  title?: string;\n  hAxis?: {\n    minValue?: any;\n    maxValue?: any;\n    ticks?: GoogleChartTicks;\n    title?: string;\n    viewWindow?: { max?: any; min?: any; [otherOptionKey: string]: any };\n    [otherOptionKey: string]: any;\n  };\n  vAxis?: {\n    minValue?: any;\n    maxValue?: any;\n    ticks?: GoogleChartTicks;\n    title?: string;\n    viewWindow?: { max?: any; min?: any; [otherOptionKey: string]: any };\n    [otherOptionKey: string]: any;\n  };\n  bubble?: {};\n  pieHole?: number;\n  redFrom?: number;\n  redTo?: number;\n  yellowFrom?: number;\n  yellowTo?: number;\n  minorTicks?: number;\n  legend?:\n    | string\n    | {\n        position?: string;\n        maxLines?: number;\n        [otherOptionKey: string]: any;\n      };\n  curveType?: string;\n  showTooltip?: boolean;\n  showInfoWindow?: boolean;\n  allowHtml?: boolean;\n  isStacked?: string | boolean;\n  minColor?: string;\n  midColor?: string;\n  maxColor?: string;\n  headerHeight?: number;\n  fontColor?: string;\n  showScale?: boolean;\n  bar?: { groupWidth?: string }; // Remove space between bars.\n  candlestick?: {\n    fallingColor?: { strokeWidth?: number; fill?: string }; // red\n    risingColor?: { strokeWidth?: number; fill?: string }; // green\n    [otherOptionKey: string]: any;\n  };\n  wordtree?: {\n    format?: string;\n    word?: string;\n    [otherOptionKey: string]: any;\n  };\n  [otherOptionKey: string]: any;\n};\n\n/*\n *\n * </GoogleChartsTypes>\n *\n */\n\nexport type WindowWithMaybeGoogle = Window & { google?: any };\n\nexport type ReactGoogleChartEvent = {\n  eventName: GoogleVizEventName;\n  callback: (eventCallbackArgs: {\n    chartWrapper: GoogleChartWrapper;\n    controlWrapper?: GoogleChartControl;\n    props: ReactGoogleChartProps;\n    google: GoogleViz;\n    eventArgs: any;\n  }) => void;\n};\n\nexport type GoogleChartToolbarItem = {\n  type: \"igoogle\" | \"html\" | \"csv\" | \"htmlcode\";\n  datasource: string;\n  gadget?: string;\n  userPrefs?: {\n    \"3d\": number;\n    [otherKeyMaybe: string]: any;\n  };\n};\n\nexport type ReactGoogleChartProps = {\n  height?: string | number;\n  width?: string | number;\n  graphID?: string;\n  chartType: GoogleChartWrapperChartType;\n  diffdata?: {\n    old: any;\n    new: any;\n  };\n  options?: ChartWrapperOptions[\"options\"];\n  loader?: JSX.Element;\n  errorElement?: JSX.Element;\n  data?: any[] | {};\n  rows?: GoogleDataTableRow[];\n  columns?: GoogleDataTableColumn[];\n  chartActions?: GoogleChartAction[];\n  chartEvents?: ReactGoogleChartEvent[];\n  chartVersion?: GoogleChartVersion;\n  chartPackages?: GoogleChartPackages[];\n  chartLanguage?: string;\n  mapsApiKey?: string;\n  graph_id?: string;\n  legendToggle?: boolean;\n  legend_toggle?: boolean;\n  onLoad?: (google: GoogleViz) => void;\n  getChartWrapper?: (\n    chartWrapper: GoogleChartWrapper,\n    google: GoogleViz\n  ) => void;\n  getChartEditor?: (args: {\n    chartEditor: GoogleChartEditor;\n    chartWrapper: GoogleChartWrapper;\n    google: GoogleViz;\n  }) => void;\n  className?: string;\n  style?: React.CSSProperties;\n  formatters?: {\n    column: number | number[];\n    type:\n      | \"ArrowFormat\"\n      | \"BarFormat\"\n      | \"ColorFormat\"\n      | \"DateFormat\"\n      | \"NumberFormat\"\n      | \"PatternFormat\";\n    options?: {};\n  }[];\n  spreadSheetUrl?: string;\n  spreadSheetQueryParameters?: {\n    headers: number;\n    gid?: number | string;\n    sheet?: string;\n    query?: string;\n    access_token?: string;\n  };\n  rootProps?: any;\n  controls?: GoogleChartControlProp[];\n  render?: ReactGoogleChartDashboardRender;\n  //https://developers.google.com/chart/interactive/docs/gallery/toolbar#example_1\n  toolbarItems?: GoogleChartToolbarItem[];\n  toolbarID?: string;\n  chartWrapperParams?: any;\n};\n\nexport type GoogleChartDashboard = {\n  draw: (data: GoogleDataTable) => void;\n  bind: (\n    controlWrapperOrWrappers: GoogleChartControl | GoogleChartControl[],\n    chartWrapper: GoogleChartWrapper\n  ) => void;\n};\n\nexport type ReactGoogleChartDashboardRender = ({\n  renderControl,\n  renderChart,\n  renderToolbar,\n}: {\n  renderControl: (\n    filter: ({\n      control,\n      controlProp,\n    }: {\n      control: GoogleChartControl;\n      controlProp: GoogleChartControlProp;\n    }) => boolean\n  ) => any;\n  renderChart: () => any;\n  renderToolbar: () => any;\n}) => any;\nexport type GoogleChartControlOptions = any;\nexport type GoogleChartControl = {\n  getContainerId: () => string;\n  getOptions: () => GoogleChartControlOptions;\n  getState: () => any;\n  setState: (state: any) => void;\n  setOptions: (options: GoogleChartControlOptions) => void;\n  setControlType: (controlType: string) => void;\n};\n\nexport type ReactGoogleChartState = {\n  loadingStatus: \"loading\" | \"errored\" | \"ready\";\n  google: null | GoogleViz;\n  // hiddenColumns: string[];\n};\n\nexport type ReactGoogleChartContext = {\n  data: ReactGoogleChartProps[\"data\"];\n  rows: ReactGoogleChartProps[\"rows\"] | null;\n  columns: ReactGoogleChartProps[\"columns\"] | null;\n  diffdata: ReactGoogleChartProps[\"diffdata\"] | null;\n  options: ReactGoogleChartProps[\"options\"] | null;\n  legend_toggle: ReactGoogleChartProps[\"legend_toggle\"] | null;\n  legendToggle: ReactGoogleChartProps[\"legendToggle\"] | null;\n  chartType: ReactGoogleChartProps[\"chartType\"] | null;\n  formatters: ReactGoogleChartProps[\"formatters\"] | null;\n  spreadSheetUrl: ReactGoogleChartProps[\"spreadSheetUrl\"] | null;\n  spreadSheetQueryParameters:\n    | ReactGoogleChartProps[\"spreadSheetQueryParameters\"]\n    | null;\n};\n","import { Chart } from \"./ReactGoogleCharts\";\n\nexport * from \"./types\";\nexport { Chart };\nexport default Chart;\n","import { h } from 'preact';\r\n\r\nconst Total = (props: any) => {\r\n\r\n    return (\r\n        <div class=\"mb-3 border rounded\" style=\"width:450px;padding:5px;\">\r\n            <div class=\"input-group mb-3\">\r\n                <span class=\"input-group-text\" style=\"width:180px;font-size:10pt;\">{props.title}</span>\r\n                <span class=\"input-group-text\">$</span>\r\n                <input  type=\"number\" id=\"txt_total\" value={props.value} aria-label=\"Total\" class=\"form-control text-end\" disabled={true}></input>\r\n                <span class=\"input-group-text\">.00</span>\r\n            </div>\r\n            <label style=\"font-size:11px;padding-left:4px;\">{props.description}</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Total;","import { h } from 'preact';\r\nimport { route } from 'preact-router';\r\nimport { Stores } from '../../stores/stores';\r\nimport { useEffect, useState } from 'preact/hooks';\r\nimport { SerializationHelpers } from '../../stores/helper'\r\nimport { Chart } from \"react-google-charts\";\r\nimport Total from '../../components/Total';\r\n\r\nconst Analysis = () => {\r\n    const [showAlertData, setShowAlertData] = useState(false);\r\n    const [monthlyExpensesData, setMonthlyExpensesData] = useState([] as CategoryType[]);\r\n    const [yearlyTotalData, setYearlyTotalData] = useState(0);\r\n    const [yearlyCashbackData, setYearlyCashbackData] = useState(0);\r\n\tconst [expenseChartData, setExpenseChartData] = useState([['category', 'amount']]);\r\n    const [top10ChartData, setTop10ChartData] = useState([['item', 'amount']]);\r\n    const [flowData, setFlowData] = useState([] as any[][]);\r\n\r\n    useEffect(() => {\r\n\t\tlet monthlyExpenses = Stores.GetTotalSpendingAsMonthlyExpense()\r\n        \r\n        setMonthlyExpensesData(monthlyExpenses.category)\r\n        setExpenseChartData(getExpenseChartData(monthlyExpenses.category))\r\n        setTop10ChartData(getTop10ExpenseChartData(monthlyExpenses.items, parseInt(monthlyExpenses.expense)))\r\n\r\n        if(monthlyExpenses.category.length > 0) {\r\n            let total = monthlyExpenses.category[monthlyExpenses.category.length-1]\r\n\r\n            setYearlyTotalData((parseInt(total.expense) * 12))\r\n            setYearlyCashbackData((parseInt(total.cashback) * 12)+ Stores.info.card_bonus.amt.value)\r\n        }\r\n\r\n        setFlowData(getExpenseFlowChartData(monthlyExpenses))\r\n\t}, []);\r\n\r\n\r\n    const getExpenseFlowChartData = (monthlyExpenses: any) => {\r\n        let categories = monthlyExpenses.category\r\n        let result: any[][] = []\r\n        result.push(['From', 'To', '$'])\r\n\r\n        for(let i=0; i<categories.length-1; ++i) {\r\n            let category = categories[i]\r\n            let amt = parseInt(category.expense)\r\n            if(amt > 0) {\r\n                let title = SerializationHelpers.CategoryTitleTransform(category.category)\r\n                result.push(['Expenses', title , amt * 12])\r\n\r\n                if(category.children.length > 0) {\r\n                    let items = category.children\r\n\r\n                    for(let j=0; j<items.length; ++j) {\r\n                        let item = items[j]\r\n                        if(item.expense > 0) {\r\n                            if(item.cashback > 0) {\r\n                                result.push([title, 'cash back' , item.cashback * 12])\r\n                                result.push([title, item.item, (item.expense-item.cashback) * 12])\r\n                            } else {\r\n                                result.push([title, item.item, item.expense * 12])\r\n                            }\r\n                            \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // net pay is set\r\n        if(Stores.info.net_pay.amt.value > 0) {\r\n            let net_pay = Stores.info.net_pay.amt.value * 12\r\n            let total_expense = parseInt(monthlyExpenses.expense) * 12\r\n            result.push(['Net Pay', 'Expenses',  total_expense])\r\n            result.push(['Net Pay', 'Savings',  net_pay - total_expense])\r\n\r\n        }\r\n        if(Stores.info.mortgage_principal.amt.value > 0) {\r\n            let frequency = Stores.info.mortgage_principal.frequency.value\r\n            let amt = Stores.info.mortgage_principal.amt.value\r\n            switch(frequency) {\r\n                case 0: amt *= 12; break;\r\n                case 1: amt *= 4; break;\r\n                case 2: amt *= 2; break;\r\n                default: break;\r\n            }\r\n            result.push(['Net Pay', 'Principal Accumulation', amt])\r\n\r\n        }\r\n        return result\r\n    }\r\n\r\n    const getTop10ExpenseChartData = (items : any[], total_expense : number) => {\r\n        const max: number = 10\r\n\r\n        let result: any = []\r\n\t\tresult.push(['item', 'amount'])\r\n\t\t\r\n        items.sort((a, b) => {\r\n            return parseInt(b.expense) - parseInt(a.expense)\r\n        })\r\n        let top10_sum = 0\r\n\r\n\t\tfor(let i=0; i<items.length-1; ++i) {\r\n            if(i === max) break\r\n            let item = items[i]\r\n            top10_sum += parseInt(item.expense)\r\n            result.push([item.item, parseInt(item.expense)])\r\n        }\r\n        result.push(['All others', total_expense - top10_sum])\r\n\r\n        return result\r\n    }\r\n\r\n    const getExpenseChartData = (categories: any) => {\r\n        let result: any = []\r\n\t\tresult.push(['category', 'amount'])\r\n\t\t\r\n\t\tfor(let i=0; i<categories.length-1; ++i) {\r\n            let category = categories[i]\r\n            result.push([SerializationHelpers.CategoryTitleTransform(category.category), parseInt(category.expense)])\r\n        }\r\n        return result\r\n    }\r\n\r\n    const showSuccessAlert = () => {\r\n\t\tif(showAlertData) {\r\n\t\t\treturn (\r\n\t\t\t\t<div id=\"bs-alert\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n\t\t\t\t\t\tYour estimated expense model is saved.\r\n\t\t\t\t\t<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n\t\t\t  \t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n    return (\r\n\t\t<div style=\"padding:10px;\">\r\n\t\t\t<p style=\"height:50px;\"/>\r\n\t\t\t<div class=\"container\">\r\n            <h6>Annual Expense Flow</h6>\r\n            <hr/>\r\n            <Chart\r\n                chartType=\"Sankey\"\r\n                width=\"1000px\"\r\n                height=\"600px\"\r\n                data={flowData}\r\n                \r\n                />\r\n\t\t\t\t<hr/>\r\n\t\t\t\t<button type=\"button\" class=\"btn btn-lg btn-primary\" onClick={() => {Stores.Serialize(); setShowAlertData(true)}}>Save Model locally</button>\r\n\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t<button type=\"button\" class=\"btn btn-lg btn-primary\" onClick={() => {Stores.ResetModel(); route('/expense/basic');}}>Reset Model</button>\r\n\t\t\t\t<hr/>                \r\n\r\n\t\t\t\t<h6>Monthly Expense Analysis</h6>\r\n                <div class=\"row align-items-start\">\r\n\t\t\t\t\t<div class=\"col\">\r\n                        <table class=\"table table-bordered\" style=\"width:450px;\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">Category</th>\r\n                                    <th scope=\"col\">Expense</th>\r\n                                    <th scope=\"col\">Cashback</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody style=\"font-size:9.5pt;\">\r\n                                {monthlyExpensesData.map(category => <tr><td>{SerializationHelpers.CategoryTitleTransform(category.category as any)}</td><td class=\"text-end\">{category.expense}</td><td class=\"text-end\">{category.cashback}</td></tr>)}\r\n                            </tbody>\r\n                        </table>\r\n                        <hr/>\r\n\t\t\t\t        <h6>Cashback over Expenses (%)</h6>\r\n                        <h1><b>{((yearlyCashbackData / yearlyTotalData) * 100).toFixed(1)}%</b></h1>     \r\n                        <label style=\"font-size:9pt;\">This is the percentage of savings on your total expenses. Generally anything more than 2% is considered very good.</label>\r\n                        <hr/>         \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col\">\r\n                        <Total value={yearlyTotalData} title=\"Est. Annual Expenses\" \r\n\t    \t\t\t\t\t\tdescription=\"Estimated annual expenses.\"/>\r\n                        <Total value={yearlyCashbackData} title=\"Est. Annual Cashback\" \r\n\t    \t\t\t\t\t\tdescription=\"Estimated annual cashback. This is normally achieved with credit card points. Some credit cards offer perks up to 10% on some spending categories. This also includes credit card bonus for the year, if any.\"/>\r\n                        <Chart\r\n                                chartType=\"PieChart\"\r\n                                data={expenseChartData}\r\n                                options={\r\n                                    {\r\n                                        title: \"Monthly Category Expense\",\r\n                                        pieHole: 0.5,\r\n                                        is3D: false,\r\n                                        titleTextStyle: {\r\n                                            fontName: 'Helvetica',\r\n                                            fontSize: 14,\r\n                                        }\r\n                                    }\r\n                                }\r\n                                width={\"450px\"}\r\n                                height={\"350px\"}/>        \r\n                        <Chart\r\n                                chartType=\"PieChart\"\r\n                                data={top10ChartData}\r\n                                options={\r\n                                    {\r\n                                        title: \"Monthly Top 10 Expenses\",\r\n                                        pieHole: 0.5,\r\n                                        is3D: false,\r\n                                        titleTextStyle: {\r\n                                            fontName: 'Helvetica',\r\n                                            fontSize: 14,\r\n                                        }\r\n                                    }\r\n                                }\r\n                                width={\"450px\"}\r\n                                height={\"350px\"}/>                                                   \r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n                \r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default Analysis;\r\n    "],"sourceRoot":""}